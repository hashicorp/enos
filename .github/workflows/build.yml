---
name: build
on:
  # Run the build workflow manually from GitHub Actions menu
  workflow_dispatch:
  # Run the build workflow on merge to main
  push:
    branches:
      - main

env:
  PKG_NAME: "enos"

jobs:
  product-metadata:
    runs-on: linux
    outputs:
      filepath: ${{ steps.generate-metadata-file.outputs.filepath }}
      product-version: ${{ steps.product-metadata.outputs.product-version }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - id: product-metadata
        run: |
          make version
          echo "product-version=$(make version)" >> "$GITHUB_OUTPUT"
      - id: generate-metadata-file
        uses: hashicorp/actions-generate-metadata@main
        with:
          version: ${{ steps.product-metadata.outputs.product-version }}
          product: ${{ env.PKG_NAME }}
      - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: metadata.json
          path: ${{ steps.generate-metadata-file.outputs.filepath }}

  profile-binary:
    runs-on: linux
    env:
      GOPRIVATE: 'github.com/hashicorp/*'
      TOKEN: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
    outputs:
      profile-path: ${{ steps.final-profile.outputs.profile-path }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
      - id: product-metadata
        run: |
          make version
          echo "product-version=$(make version)" >> "$GITHUB_OUTPUT"
      - uses: ./.github/actions/build
        name: Standard build
        with:
          bundle: false
          goarch: amd64
          goos: linux
          version: ${{ steps.product-metadata.outputs.product-version }}
      - uses: ./.github/actions/profile-build
        name: Profile standard build
        with:
          upload-profile: false
      - uses: ./.github/actions/build
        name: Optimized build
        with:
          bundle: false
          goarch: amd64
          goos: linux
          pgo: true
          version: ${{ steps.product-metadata.outputs.product-version }}
      - uses: ./.github/actions/profile-build
        id: final-profile
        name: Profile optimized build

  build:
    needs:
      - product-metadata
      - profile-binary
    runs-on: linux
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    env:
      GOPRIVATE: 'github.com/hashicorp/*'
      TOKEN: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
    outputs:
      artifact-name: ${{ steps.build.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
      - uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4.1.2
        id: download
        with:
          name: ${{ needs.profile-binary.outputs.profile-path }}
      - uses: ./.github/actions/build
        name: Build
        id: build
        with:
          goarch: ${{ matrix.goarch }}
          goos: ${{ matrix.goos }}
          pgo: true
          version: ${{ needs.product-metadata.outputs.product-version }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: ${{ steps.build.outputs.artifact-name }}
          path: ${{ steps.build.outputs.artifact-path }}
          retention-days: 1
      - if: ${{ matrix.goos == 'linux' }}
        uses: hashicorp/actions-packaging-linux@v1
        with:
          name: ${{ github.event.repository.name }}
          description: "enos CLI package"
          arch: ${{ matrix.goarch }}
          version: ${{ needs.product-metadata.outputs.product-version }}
          maintainer: "HashiCorp"
          homepage: "https://github.com/hashicorp/enos"
          license: "MPL-2.0"
          binary: "dist/${{ env.PKG_NAME }}"
          deb_depends: "openssl"
          rpm_depends: "openssl"
      - name: Set Package Names
        if: ${{ matrix.goos == 'linux' }}
        run: |
          echo "RPM_PACKAGE=$(basename out/*.rpm)" >> "$GITHUB_ENV"
          echo "DEB_PACKAGE=$(basename out/*.deb)" >> "$GITHUB_ENV"
      - name: Upload RHEL Packages
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        if: ${{ matrix.goos == 'linux' }}
        with:
          name: ${{ env.RPM_PACKAGE }}
          path: out/${{ env.RPM_PACKAGE }}
      - name: Upload Debian Packages
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        if: ${{ matrix.goos == 'linux' }}
        with:
          name: ${{ env.DEB_PACKAGE }}
          path: out/${{ env.DEB_PACKAGE }}

  build-docker:
    name: Docker ${{ matrix.arch }} build
    needs:
      - product-metadata
      - build
    runs-on: linux
    strategy:
      matrix:
        arch: ["arm64", "amd64"]
    env:
      repo: ${{github.event.repository.name}}
      version: ${{needs.product-metadata.outputs.product-version}}
      GOPRIVATE: 'github.com/hashicorp/*'
      TOKEN: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: hashicorp/actions-docker-build@v1
        with:
          version: ${{env.version}}
          target: default
          arch: ${{matrix.arch}}
          tags: |
            docker.io/hashicorp/${{env.repo}}:${{env.version}}
            986891699432.dkr.ecr.us-east-1.amazonaws.com/hashicorp/${{env.repo}}:${{env.version}}

  validate-artifact:
    name: Validate Artifact
    needs: [build, product-metadata]
    uses: ./.github/workflows/validate.yml
    with:
      artifact-name: "enos_${{ needs.product-metadata.outputs.product-version }}_linux_amd64.zip"
    secrets: inherit
