name: create-release

on:
  workflow_dispatch:
    inputs:
      sha:
        required: true
        type: string
        description: The git SHA of the artifacts in Artifactory to be used in this release
      version:
        required: true
        type: string
        description: The version number to be used in this release (e.g. 0.0.1)
      channel:
        required: true
        type: choice
        description: The Artifactory channel to grab the release assets from
        default: stable
        options:
        - dev
        - stable
        - staging
      tag_suffix:
        required: false
        type: string
        description: To add a suffix to the release tag, enter the suffix here, including the hyphen. For example, version "0.0.1" with suffix "-dev" will create the release tag "v0.0.1-dev".
      pre_release:
        required: false
        type: boolean
        default: false
        description: To mark this as a pre-release, check this box.

jobs:
  create-release:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: 'github.com/hashicorp/*'
      GITHUB_TOKEN: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
      ARTIFACTORY_TOKEN: ${{ secrets.QUALITY_TEAM_ARTIFACTORY_TOKEN }}
      ARTIFACTORY_USER: ${{ secrets.QUALITY_TEAM_ARTIFACTORY_USER }}
      PRODUCT: ${{ github.event.repository.name }}
      VERSION: ${{ github.event.inputs.version }}
      TAG: "v${{ github.event.inputs.version }}"
      SHA: ${{ github.event.inputs.sha }}
      PRE_RELEASE: ${{ github.event.inputs.pre_release }}
      TAG_SUFFIX: ${{ github.event.inputs.tag_suffix }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Set up bob CLI
      - name: Setup bob CLI
        uses: hashicorp/action-setup-bob@v1
        with:
          github-token: ${{ secrets.ELEVATED_GITHUB_TOKEN }}

      # Use bob to download the correct repo/version/sha. `bob download artifactory` default output is to .bob/artifacts
      - name: Download artifacts
        run: |
          bob download artifactory \
          -token=${{ secrets.QUALITY_TEAM_ARTIFACTORY_TOKEN }} \
          -user=${{ secrets.QUALITY_TEAM_ARTIFACTORY_USER }} \
          -channel stable \
          -commit=${{ env.SHA }} \
          -product-name=${{env.PRODUCT }} \
          -product-version=${{ env.VERSION }} \
          -pattern="${{ env.PRODUCT }}_${{ env.VERSION }}_*_*.zip"

      # Confirm that artifacts have been downloaded
      - name: Confirm
        run: ls .bob/artifacts

      # Create a pre-release if pre-release has been selected on workflow trigger inputs
      - name: Create pre-release
        if: ${{ env.PRE_RELEASE }} == true
        run: |
          export tag=v${{ env.VERSION }}${{ env.TAG_SUFFIX }}
          gh release create $tag --target ${{ env.SHA }} --generate-notes --prerelease --draft ./.bob/artifacts/*.zip

      # Create a regular release if pre-release has not been selected on workflow trigger inputs
      - name: Create release
        if: $ {{ env.PRE_RELEASE }} == false
        run: |
          export tag=v${{ env.VERSION }}${{ env.TAG_SUFFIX }}
          gh release create $tag --target ${{ env.SHA }} --generate-notes --draft ./.bob/artifacts/*.zip
