name: validate

# NOTE  ** READ ME **  NOTE
# This workflow is intended to be imported and called by other workflows.
# As such, the important things that you need to know if you're modifying
# this file are:
#
# If you need a secret in this file you need to pass them from the caller
# workflow into this. You do this by configuring secrets as if they are input
# down below in the secrets stanza. You then need to update every calling
# workflow to pass in the secrets.

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string

# These permissions are necessary for the doormat-action to function
permissions:
  contents: read
  id-token: write

jobs:
  static-analysis:
    name: "Format"
    runs-on: linux
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: .go-version
      - uses: ./.github/actions/set-up-buf
      - uses: ./.github/actions/set-up-gofumpt
      - uses: ./.github/actions/set-up-golangci-lint
      - uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{inputs.artifact-name }}
      - name: unzip
        run: |
          ls -l ${{inputs.artifact-name }}
          unzip ${{inputs.artifact-name }} -d dist
      - name: fmt-check
        run: make fmt-check
      - name: lint
        run: golangci-lint run -v -c .golangci.yml --out-format=github-actions --timeout=5m0s

  test:
    name: Go tests
    runs-on: linux
    env:
      CI: true
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: .go-version
      - uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
      - uses: hashicorp/doormat-action@v1
        with:
          # This role, the associated policy, the workflow event types, and the
          # the allowed git refs are managed via the Terraform in the
          # hashicorp/enos-ci repository.
          aws-role-arn: arn:aws:iam::147451547303:role/enos
      - name: Setup Enos SSH Keys
        id: sshkey
        run: |
          mkdir -p ./acceptance/support
          echo "${{ secrets.ENOS_CI_SSH_PRIVATE_KEY }}" > ./acceptance/support/private_key.pem
          chmod 600 ./acceptance/support/private_key.pem
      - name: Download Artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{inputs.artifact-name }}
      - name: Run all Go tests (unit, acceptance, external deps)
        run: |
          ls -l ${{inputs.artifact-name }}
          unzip ${{inputs.artifact-name }} -d dist
          make test-acc-ext
