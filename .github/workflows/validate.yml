name: validate

# NOTE  ** READ ME **  NOTE
# This workflow is intended to be imported and called by other workflows.
# As such, the important things that you need to know if you're modifying
# this file are:
#
# If you need a secret in this file you need to pass them from the caller
# workflow into this. You do this by configuring secrets as if they are input
# down below in the secrets stanza. You then need to update every calling
# workflow to pass in the secrets.

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
    secrets:
      ENOS_CI_SSH_PRIVATE_KEY:
        required: true

# These permissions are necessary for the doormat-action to function
permissions:
  contents: read
  id-token: write

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: .go-version
      - name: golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run -v -c .golangci.yml --out-format=github-actions --timeout=5m0s

  fmt:
    name: "Format"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: .go-version
      - name: fmt-check
        run: |
          go install mvdan.cc/gofumpt@latest
          go install github.com/bufbuild/buf/cmd/buf@latest
          make fmt-check

  acceptance:
    name: "Acceptance Tests CI"
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: .go-version
      - uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
      - uses: hashicorp/doormat-action@v1
        with:
          # This role, the associated policy, the workflow event types, and the
          # the allowed git refs are managed via the Terraform in the
          # hashicorp/enos-ci repository.
          aws-role-arn: arn:aws:iam::147451547303:role/enos
      - name: Setup Enos SSH Keys
        id: sshkey
        run: |
          mkdir -p ./acceptance/support
          echo "${{ secrets.ENOS_CI_SSH_PRIVATE_KEY }}" > ./acceptance/support/private_key.pem
          chmod 600 ./acceptance/support/private_key.pem
      - name: Download Artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{inputs.artifact-name }}
      - name: Acceptance Tests
        run: |
          ls -l ${{inputs.artifact-name }}
          unzip ${{inputs.artifact-name }} -d dist
          make test-acc-ext
