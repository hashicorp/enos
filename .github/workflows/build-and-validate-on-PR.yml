## TRIGGERED WORKFLOW: build-and-validate-on-PR

name: build-and-validate-on-PR

on:
    workflow_dispatch:
    push:
        paths:
            - 'version/version.go'
        branches:    
            - main

env:
  PKG_NAME: "enos"

jobs:
    build-and-validate:
        uses: hashicorp/enos/.github/workflows/build-and-validate.yml@v1
        # example: octo-org/example-repo/.github/workflows/called-workflow.yml@
        with: # pass any inputs here
        secrets: # pass any secrets here

    get-build-filepath:
      needs: build-and-validate

    package:
      needs: build-and-validate
        if: ${{ matrix.goos == 'linux' }}
        uses: hashicorp/package@v1
        with:
          name: ${{ github.event.repository.name }}
          description: "enos CLI package"
          arch: ${{ matrix.goarch }}
          version: ${{ needs.get-product-version.outputs.product-version }}
          maintainer: "HashiCorp"
          homepage: "https://github.com/hashicorp/enos"
          license: "MPL-2.0"
          binary: "${{ env.PKG_NAME }}"
          deb_depends: "openssl"
          rpm_depends: "openssl"

      - name: Set Package Names
        if: ${{ matrix.goos == 'linux' }}
        run: |
          echo "RPM_PACKAGE=$(basename out/*.rpm)" >> $GITHUB_ENV
          echo "DEB_PACKAGE=$(basename out/*.deb)" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.goos == 'linux' }}
        with:
          name: ${{ env.RPM_PACKAGE }}
          path: out/${{ env.RPM_PACKAGE }}

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.goos == 'linux' }}
        with:
          name: ${{ env.DEB_PACKAGE }}
          path: out/${{ env.DEB_PACKAGE }}