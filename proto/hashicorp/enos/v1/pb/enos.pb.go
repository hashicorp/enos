// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: enos.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UI_Settings_Format int32

const (
	UI_Settings_FORMAT_UNSPECIFIED UI_Settings_Format = 0
	UI_Settings_FORMAT_BASIC_TEXT  UI_Settings_Format = 1
	UI_Settings_FORMAT_JSON        UI_Settings_Format = 2
	UI_Settings_FORMAT_HTML        UI_Settings_Format = 3
)

// Enum value maps for UI_Settings_Format.
var (
	UI_Settings_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_BASIC_TEXT",
		2: "FORMAT_JSON",
		3: "FORMAT_HTML",
	}
	UI_Settings_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"FORMAT_BASIC_TEXT":  1,
		"FORMAT_JSON":        2,
		"FORMAT_HTML":        3,
	}
)

func (x UI_Settings_Format) Enum() *UI_Settings_Format {
	p := new(UI_Settings_Format)
	*p = x
	return p
}

func (x UI_Settings_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UI_Settings_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_enos_proto_enumTypes[0].Descriptor()
}

func (UI_Settings_Format) Type() protoreflect.EnumType {
	return &file_enos_proto_enumTypes[0]
}

func (x UI_Settings_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UI_Settings_Format.Descriptor instead.
func (UI_Settings_Format) EnumDescriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{0, 0, 0}
}

type UI_Settings_Level int32

const (
	UI_Settings_LEVEL_UNSPECIFIED UI_Settings_Level = 0
	UI_Settings_LEVEL_ERROR       UI_Settings_Level = 1
	UI_Settings_LEVEL_WARN        UI_Settings_Level = 2
	UI_Settings_LEVEL_INFO        UI_Settings_Level = 3
	UI_Settings_LEVEL_DEBUG       UI_Settings_Level = 4
	UI_Settings_LEVEL_TRACE       UI_Settings_Level = 5
)

// Enum value maps for UI_Settings_Level.
var (
	UI_Settings_Level_name = map[int32]string{
		0: "LEVEL_UNSPECIFIED",
		1: "LEVEL_ERROR",
		2: "LEVEL_WARN",
		3: "LEVEL_INFO",
		4: "LEVEL_DEBUG",
		5: "LEVEL_TRACE",
	}
	UI_Settings_Level_value = map[string]int32{
		"LEVEL_UNSPECIFIED": 0,
		"LEVEL_ERROR":       1,
		"LEVEL_WARN":        2,
		"LEVEL_INFO":        3,
		"LEVEL_DEBUG":       4,
		"LEVEL_TRACE":       5,
	}
)

func (x UI_Settings_Level) Enum() *UI_Settings_Level {
	p := new(UI_Settings_Level)
	*p = x
	return p
}

func (x UI_Settings_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UI_Settings_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_enos_proto_enumTypes[1].Descriptor()
}

func (UI_Settings_Level) Type() protoreflect.EnumType {
	return &file_enos_proto_enumTypes[1]
}

func (x UI_Settings_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UI_Settings_Level.Descriptor instead.
func (UI_Settings_Level) EnumDescriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{0, 0, 1}
}

type Diagnostic_Severity int32

const (
	Diagnostic_SEVERITY_UNSPECIFIED Diagnostic_Severity = 0
	Diagnostic_SEVERITY_UNKNOWN     Diagnostic_Severity = 1
	Diagnostic_SEVERITY_ERROR       Diagnostic_Severity = 2
	Diagnostic_SEVERITY_WARNING     Diagnostic_Severity = 3
)

// Enum value maps for Diagnostic_Severity.
var (
	Diagnostic_Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_UNKNOWN",
		2: "SEVERITY_ERROR",
		3: "SEVERITY_WARNING",
	}
	Diagnostic_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_UNKNOWN":     1,
		"SEVERITY_ERROR":       2,
		"SEVERITY_WARNING":     3,
	}
)

func (x Diagnostic_Severity) Enum() *Diagnostic_Severity {
	p := new(Diagnostic_Severity)
	*p = x
	return p
}

func (x Diagnostic_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Diagnostic_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_enos_proto_enumTypes[2].Descriptor()
}

func (Diagnostic_Severity) Type() protoreflect.EnumType {
	return &file_enos_proto_enumTypes[2]
}

func (x Diagnostic_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Diagnostic_Severity.Descriptor instead.
func (Diagnostic_Severity) EnumDescriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{1, 0}
}

type Operation_Status int32

const (
	Operation_STATUS_UNSPECIFIED       Operation_Status = 0
	Operation_STATUS_UNKNOWN           Operation_Status = 1
	Operation_STATUS_QUEUED            Operation_Status = 2
	Operation_STATUS_WAITING           Operation_Status = 3
	Operation_STATUS_RUNNING           Operation_Status = 4
	Operation_STATUS_RUNNING_WARNING   Operation_Status = 6
	Operation_STATUS_FAILED            Operation_Status = 7
	Operation_STATUS_COMPLETED         Operation_Status = 8
	Operation_STATUS_COMPLETED_WARNING Operation_Status = 9
	Operation_STATUS_CANCELLED         Operation_Status = 10
)

// Enum value maps for Operation_Status.
var (
	Operation_Status_name = map[int32]string{
		0:  "STATUS_UNSPECIFIED",
		1:  "STATUS_UNKNOWN",
		2:  "STATUS_QUEUED",
		3:  "STATUS_WAITING",
		4:  "STATUS_RUNNING",
		6:  "STATUS_RUNNING_WARNING",
		7:  "STATUS_FAILED",
		8:  "STATUS_COMPLETED",
		9:  "STATUS_COMPLETED_WARNING",
		10: "STATUS_CANCELLED",
	}
	Operation_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":       0,
		"STATUS_UNKNOWN":           1,
		"STATUS_QUEUED":            2,
		"STATUS_WAITING":           3,
		"STATUS_RUNNING":           4,
		"STATUS_RUNNING_WARNING":   6,
		"STATUS_FAILED":            7,
		"STATUS_COMPLETED":         8,
		"STATUS_COMPLETED_WARNING": 9,
		"STATUS_CANCELLED":         10,
	}
)

func (x Operation_Status) Enum() *Operation_Status {
	p := new(Operation_Status)
	*p = x
	return p
}

func (x Operation_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_enos_proto_enumTypes[3].Descriptor()
}

func (Operation_Status) Type() protoreflect.EnumType {
	return &file_enos_proto_enumTypes[3]
}

func (x Operation_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation_Status.Descriptor instead.
func (Operation_Status) EnumDescriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0}
}

type Matrix_Exclude_Mode int32

const (
	Matrix_Exclude_MODE_UNSPECIFIED Matrix_Exclude_Mode = 0
	// MODE_EXACTLY will match a vector that has the exact ordered elements
	Matrix_Exclude_MODE_EXACTLY Matrix_Exclude_Mode = 1
	// MODE_EQUAL_UNORDERED will match a vector that has the exact elements
	// but may be unordered.
	Matrix_Exclude_MODE_EQUAL_UNORDERED Matrix_Exclude_Mode = 2
	// MODE_CONTAINS will match any vector that has at least the given vector
	// elements in any order.
	Matrix_Exclude_MODE_CONTAINS Matrix_Exclude_Mode = 3
)

// Enum value maps for Matrix_Exclude_Mode.
var (
	Matrix_Exclude_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_EXACTLY",
		2: "MODE_EQUAL_UNORDERED",
		3: "MODE_CONTAINS",
	}
	Matrix_Exclude_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED":     0,
		"MODE_EXACTLY":         1,
		"MODE_EQUAL_UNORDERED": 2,
		"MODE_CONTAINS":        3,
	}
)

func (x Matrix_Exclude_Mode) Enum() *Matrix_Exclude_Mode {
	p := new(Matrix_Exclude_Mode)
	*p = x
	return p
}

func (x Matrix_Exclude_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Matrix_Exclude_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_enos_proto_enumTypes[4].Descriptor()
}

func (Matrix_Exclude_Mode) Type() protoreflect.EnumType {
	return &file_enos_proto_enumTypes[4]
}

func (x Matrix_Exclude_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Matrix_Exclude_Mode.Descriptor instead.
func (Matrix_Exclude_Mode) EnumDescriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{10, 2, 0}
}

// UI contains messages related to the UI calling the server. This information
// will be populated by the caller and passed to the server, which it can use
// in some instances to generate output tailored for the caller.
type UI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UI) Reset() {
	*x = UI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UI) ProtoMessage() {}

func (x *UI) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UI.ProtoReflect.Descriptor instead.
func (*UI) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{0}
}

// Diagnostic is how we'll return error messages that may or may not have code
// context associated with it. This is general enough to handle Terraform's
// JSON output diagnostics and Enos HCL diagnostics.
type Diagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity Diagnostic_Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=hashicorp.enos.v1.Diagnostic_Severity" json:"severity,omitempty"`
	Summary  string              `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Detail   string              `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	Range    *Range              `protobuf:"bytes,4,opt,name=range,proto3" json:"range,omitempty"`
	Snippet  *Diagnostic_Snippet `protobuf:"bytes,5,opt,name=snippet,proto3" json:"snippet,omitempty"`
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{1}
}

func (x *Diagnostic) GetSeverity() Diagnostic_Severity {
	if x != nil {
		return x.Severity
	}
	return Diagnostic_SEVERITY_UNSPECIFIED
}

func (x *Diagnostic) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Diagnostic) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *Diagnostic) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *Diagnostic) GetSnippet() *Diagnostic_Snippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string     `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Start    *Range_Pos `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End      *Range_Pos `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{2}
}

func (x *Range) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Range) GetStart() *Range_Pos {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Range) GetEnd() *Range_Pos {
	if x != nil {
		return x.End
	}
	return nil
}

// Workspace defines an Enos workspace. In our case that means our working directory,
// output directory, flight plan and any Terraform specific configuration.
type Workspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// flightplan is our workspace flight plan configuration and variables
	Flightplan *FlightPlan `protobuf:"bytes,1,opt,name=flightplan,proto3" json:"flightplan,omitempty"`
	// terraform_exec contains our default and override Terraform execution
	// configuration.
	TfExecCfg *Terraform_Runner_Config `protobuf:"bytes,4,opt,name=tf_exec_cfg,proto3" json:"tf_exec_cfg,omitempty"`
	// dir is our workspaces directory. This will default to the current working
	// directory.
	Dir string `protobuf:"bytes,5,opt,name=dir,proto3" json:"dir,omitempty"`
	// Terraform modules are scoped relative to directories. This optional field
	// can be used as the base working dir for generated modules. If it is not
	// set Enos will use $dir/.enos
	OutDir string `protobuf:"bytes,6,opt,name=out_dir,json=outDir,proto3" json:"out_dir,omitempty"`
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{3}
}

func (x *Workspace) GetFlightplan() *FlightPlan {
	if x != nil {
		return x.Flightplan
	}
	return nil
}

func (x *Workspace) GetTfExecCfg() *Terraform_Runner_Config {
	if x != nil {
		return x.TfExecCfg
	}
	return nil
}

func (x *Workspace) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *Workspace) GetOutDir() string {
	if x != nil {
		return x.OutDir
	}
	return ""
}

// FlightPlan is the Enos configuration.
type FlightPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseDir     string            `protobuf:"bytes,1,opt,name=base_dir,json=baseDir,proto3" json:"base_dir,omitempty"`
	EnosHcl     map[string][]byte `protobuf:"bytes,2,rep,name=enos_hcl,proto3" json:"enos_hcl,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnosVarsHcl map[string][]byte `protobuf:"bytes,3,rep,name=enos_vars_hcl,proto3" json:"enos_vars_hcl,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnosVarsEnv []string          `protobuf:"bytes,4,rep,name=enos_vars_env,proto3" json:"enos_vars_env,omitempty"`
}

func (x *FlightPlan) Reset() {
	*x = FlightPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightPlan) ProtoMessage() {}

func (x *FlightPlan) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightPlan.ProtoReflect.Descriptor instead.
func (*FlightPlan) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{4}
}

func (x *FlightPlan) GetBaseDir() string {
	if x != nil {
		return x.BaseDir
	}
	return ""
}

func (x *FlightPlan) GetEnosHcl() map[string][]byte {
	if x != nil {
		return x.EnosHcl
	}
	return nil
}

func (x *FlightPlan) GetEnosVarsHcl() map[string][]byte {
	if x != nil {
		return x.EnosVarsHcl
	}
	return nil
}

func (x *FlightPlan) GetEnosVarsEnv() []string {
	if x != nil {
		return x.EnosVarsEnv
	}
	return nil
}

type DecodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Flightplan  *FlightPlan   `protobuf:"bytes,2,opt,name=flightplan,proto3" json:"flightplan,omitempty"`
}

func (x *DecodeResponse) Reset() {
	*x = DecodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeResponse) ProtoMessage() {}

func (x *DecodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeResponse.ProtoReflect.Descriptor instead.
func (*DecodeResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{5}
}

func (x *DecodeResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *DecodeResponse) GetFlightplan() *FlightPlan {
	if x != nil {
		return x.Flightplan
	}
	return nil
}

// Scenario is an Enos scenario.
type Scenario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Scenario) Reset() {
	*x = Scenario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario) ProtoMessage() {}

func (x *Scenario) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario.ProtoReflect.Descriptor instead.
func (*Scenario) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{6}
}

// Operator is our operation operator
type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Operator_Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{7}
}

func (x *Operator) GetConfig() *Operator_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

// Operation is our primary schema for a scenario operation.
type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8}
}

type Terraform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform) Reset() {
	*x = Terraform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform) ProtoMessage() {}

func (x *Terraform) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform.ProtoReflect.Descriptor instead.
func (*Terraform) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9}
}

// Matrix represents our DSL matrix
type Matrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vectors []*Matrix_Vector  `protobuf:"bytes,1,rep,name=vectors,proto3" json:"vectors,omitempty"`
	Include *Matrix_Vector    `protobuf:"bytes,2,opt,name=include,proto3" json:"include,omitempty"`
	Exclude []*Matrix_Exclude `protobuf:"bytes,3,rep,name=exclude,proto3" json:"exclude,omitempty"`
}

func (x *Matrix) Reset() {
	*x = Matrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matrix) ProtoMessage() {}

func (x *Matrix) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matrix.ProtoReflect.Descriptor instead.
func (*Matrix) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{10}
}

func (x *Matrix) GetVectors() []*Matrix_Vector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *Matrix) GetInclude() *Matrix_Vector {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *Matrix) GetExclude() []*Matrix_Exclude {
	if x != nil {
		return x.Exclude
	}
	return nil
}

// Sample is a scenario matrix sample
type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *Sample_ID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attributes []*Sample_Attribute `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Subsets    []*Sample_Subset    `protobuf:"bytes,3,rep,name=subsets,proto3" json:"subsets,omitempty"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11}
}

func (x *Sample) GetId() *Sample_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Sample) GetAttributes() []*Sample_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Sample) GetSubsets() []*Sample_Subset {
	if x != nil {
		return x.Subsets
	}
	return nil
}

type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{12}
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{13}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Version     string        `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	GitSha      string        `protobuf:"bytes,3,opt,name=git_sha,proto3" json:"git_sha,omitempty"`
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{14}
}

func (x *GetVersionResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *GetVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetVersionResponse) GetGitSha() string {
	if x != nil {
		return x.GitSha
	}
	return ""
}

type ValidateScenariosConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ValidateScenariosConfigurationRequest) Reset() {
	*x = ValidateScenariosConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateScenariosConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateScenariosConfigurationRequest) ProtoMessage() {}

func (x *ValidateScenariosConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateScenariosConfigurationRequest.ProtoReflect.Descriptor instead.
func (*ValidateScenariosConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{15}
}

func (x *ValidateScenariosConfigurationRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *ValidateScenariosConfigurationRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ValidateScenariosConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic   `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
}

func (x *ValidateScenariosConfigurationResponse) Reset() {
	*x = ValidateScenariosConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateScenariosConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateScenariosConfigurationResponse) ProtoMessage() {}

func (x *ValidateScenariosConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateScenariosConfigurationResponse.ProtoReflect.Descriptor instead.
func (*ValidateScenariosConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{16}
}

func (x *ValidateScenariosConfigurationResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *ValidateScenariosConfigurationResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

type ListScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListScenariosRequest) Reset() {
	*x = ListScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScenariosRequest) ProtoMessage() {}

func (x *ListScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScenariosRequest.ProtoReflect.Descriptor instead.
func (*ListScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{17}
}

func (x *ListScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *ListScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic   `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Scenarios   []*Ref_Scenario `protobuf:"bytes,3,rep,name=scenarios,proto3" json:"scenarios,omitempty"`
}

func (x *ListScenariosResponse) Reset() {
	*x = ListScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScenariosResponse) ProtoMessage() {}

func (x *ListScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScenariosResponse.ProtoReflect.Descriptor instead.
func (*ListScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{18}
}

func (x *ListScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *ListScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *ListScenariosResponse) GetScenarios() []*Ref_Scenario {
	if x != nil {
		return x.Scenarios
	}
	return nil
}

type GenerateScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GenerateScenariosRequest) Reset() {
	*x = GenerateScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateScenariosRequest) ProtoMessage() {}

func (x *GenerateScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateScenariosRequest.ProtoReflect.Descriptor instead.
func (*GenerateScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{19}
}

func (x *GenerateScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *GenerateScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GenerateScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *GenerateScenariosResponse) Reset() {
	*x = GenerateScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateScenariosResponse) ProtoMessage() {}

func (x *GenerateScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateScenariosResponse.ProtoReflect.Descriptor instead.
func (*GenerateScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *GenerateScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *GenerateScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type CheckScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *CheckScenariosRequest) Reset() {
	*x = CheckScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckScenariosRequest) ProtoMessage() {}

func (x *CheckScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckScenariosRequest.ProtoReflect.Descriptor instead.
func (*CheckScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{21}
}

func (x *CheckScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *CheckScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type CheckScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *CheckScenariosResponse) Reset() {
	*x = CheckScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckScenariosResponse) ProtoMessage() {}

func (x *CheckScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckScenariosResponse.ProtoReflect.Descriptor instead.
func (*CheckScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{22}
}

func (x *CheckScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *CheckScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *CheckScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type LaunchScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *LaunchScenariosRequest) Reset() {
	*x = LaunchScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchScenariosRequest) ProtoMessage() {}

func (x *LaunchScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchScenariosRequest.ProtoReflect.Descriptor instead.
func (*LaunchScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{23}
}

func (x *LaunchScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *LaunchScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type LaunchScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *LaunchScenariosResponse) Reset() {
	*x = LaunchScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchScenariosResponse) ProtoMessage() {}

func (x *LaunchScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchScenariosResponse.ProtoReflect.Descriptor instead.
func (*LaunchScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{24}
}

func (x *LaunchScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *LaunchScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *LaunchScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type DestroyScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DestroyScenariosRequest) Reset() {
	*x = DestroyScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyScenariosRequest) ProtoMessage() {}

func (x *DestroyScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyScenariosRequest.ProtoReflect.Descriptor instead.
func (*DestroyScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{25}
}

func (x *DestroyScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *DestroyScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DestroyScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *DestroyScenariosResponse) Reset() {
	*x = DestroyScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyScenariosResponse) ProtoMessage() {}

func (x *DestroyScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyScenariosResponse.ProtoReflect.Descriptor instead.
func (*DestroyScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{26}
}

func (x *DestroyScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *DestroyScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *DestroyScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type RunScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *RunScenariosRequest) Reset() {
	*x = RunScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunScenariosRequest) ProtoMessage() {}

func (x *RunScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunScenariosRequest.ProtoReflect.Descriptor instead.
func (*RunScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{27}
}

func (x *RunScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *RunScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type RunScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *RunScenariosResponse) Reset() {
	*x = RunScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunScenariosResponse) ProtoMessage() {}

func (x *RunScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunScenariosResponse.ProtoReflect.Descriptor instead.
func (*RunScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{28}
}

func (x *RunScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *RunScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *RunScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ExecScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ExecScenariosRequest) Reset() {
	*x = ExecScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecScenariosRequest) ProtoMessage() {}

func (x *ExecScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecScenariosRequest.ProtoReflect.Descriptor instead.
func (*ExecScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{29}
}

func (x *ExecScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *ExecScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ExecScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *ExecScenariosResponse) Reset() {
	*x = ExecScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecScenariosResponse) ProtoMessage() {}

func (x *ExecScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecScenariosResponse.ProtoReflect.Descriptor instead.
func (*ExecScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{30}
}

func (x *ExecScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *ExecScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *ExecScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type OutputScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *OutputScenariosRequest) Reset() {
	*x = OutputScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputScenariosRequest) ProtoMessage() {}

func (x *OutputScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputScenariosRequest.ProtoReflect.Descriptor instead.
func (*OutputScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{31}
}

func (x *OutputScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *OutputScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type OutputScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse  `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Operations  []*Ref_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *OutputScenariosResponse) Reset() {
	*x = OutputScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputScenariosResponse) ProtoMessage() {}

func (x *OutputScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputScenariosResponse.ProtoReflect.Descriptor instead.
func (*OutputScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{32}
}

func (x *OutputScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *OutputScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *OutputScenariosResponse) GetOperations() []*Ref_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ListSamplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
}

func (x *ListSamplesRequest) Reset() {
	*x = ListSamplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSamplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSamplesRequest) ProtoMessage() {}

func (x *ListSamplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSamplesRequest.ProtoReflect.Descriptor instead.
func (*ListSamplesRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{33}
}

func (x *ListSamplesRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

type ListSamplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic   `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Samples     []*Ref_Sample   `protobuf:"bytes,3,rep,name=samples,proto3" json:"samples,omitempty"`
}

func (x *ListSamplesResponse) Reset() {
	*x = ListSamplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSamplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSamplesResponse) ProtoMessage() {}

func (x *ListSamplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSamplesResponse.ProtoReflect.Descriptor instead.
func (*ListSamplesResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{34}
}

func (x *ListSamplesResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *ListSamplesResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *ListSamplesResponse) GetSamples() []*Ref_Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

type ObserveSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace     `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Sample_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ObserveSampleRequest) Reset() {
	*x = ObserveSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserveSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveSampleRequest) ProtoMessage() {}

func (x *ObserveSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveSampleRequest.ProtoReflect.Descriptor instead.
func (*ObserveSampleRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{35}
}

func (x *ObserveSampleRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *ObserveSampleRequest) GetFilter() *Sample_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ObserveSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic       `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse     `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Observation *Sample_Observation `protobuf:"bytes,3,opt,name=observation,proto3" json:"observation,omitempty"`
}

func (x *ObserveSampleResponse) Reset() {
	*x = ObserveSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserveSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveSampleResponse) ProtoMessage() {}

func (x *ObserveSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveSampleResponse.ProtoReflect.Descriptor instead.
func (*ObserveSampleResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{36}
}

func (x *ObserveSampleResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *ObserveSampleResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *ObserveSampleResponse) GetObservation() *Sample_Observation {
	if x != nil {
		return x.Observation
	}
	return nil
}

type FormatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files  []*FormatRequest_File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Config *FormatRequest_Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *FormatRequest) Reset() {
	*x = FormatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatRequest) ProtoMessage() {}

func (x *FormatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatRequest.ProtoReflect.Descriptor instead.
func (*FormatRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{37}
}

func (x *FormatRequest) GetFiles() []*FormatRequest_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *FormatRequest) GetConfig() *FormatRequest_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type FormatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic              `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Responses   []*FormatResponse_Response `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *FormatResponse) Reset() {
	*x = FormatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatResponse) ProtoMessage() {}

func (x *FormatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatResponse.ProtoReflect.Descriptor instead.
func (*FormatResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{38}
}

func (x *FormatResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *FormatResponse) GetResponses() []*FormatResponse_Response {
	if x != nil {
		return x.Responses
	}
	return nil
}

type OperationEventStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op *Ref_Operation `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *OperationEventStreamRequest) Reset() {
	*x = OperationEventStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationEventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationEventStreamRequest) ProtoMessage() {}

func (x *OperationEventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationEventStreamRequest.ProtoReflect.Descriptor instead.
func (*OperationEventStreamRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{39}
}

func (x *OperationEventStreamRequest) GetOp() *Ref_Operation {
	if x != nil {
		return x.Op
	}
	return nil
}

type OperationEventStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Event       *Operation_Event `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *OperationEventStreamResponse) Reset() {
	*x = OperationEventStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationEventStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationEventStreamResponse) ProtoMessage() {}

func (x *OperationEventStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationEventStreamResponse.ProtoReflect.Descriptor instead.
func (*OperationEventStreamResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{40}
}

func (x *OperationEventStreamResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *OperationEventStreamResponse) GetEvent() *Operation_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type OperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op *Ref_Operation `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *OperationRequest) Reset() {
	*x = OperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationRequest) ProtoMessage() {}

func (x *OperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationRequest.ProtoReflect.Descriptor instead.
func (*OperationRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{41}
}

func (x *OperationRequest) GetOp() *Ref_Operation {
	if x != nil {
		return x.Op
	}
	return nil
}

type OperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic       `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Response    *Operation_Response `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *OperationResponse) Reset() {
	*x = OperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResponse) ProtoMessage() {}

func (x *OperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResponse.ProtoReflect.Descriptor instead.
func (*OperationResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{42}
}

func (x *OperationResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *OperationResponse) GetResponse() *Operation_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type OperationResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic         `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse       `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Responses   []*Operation_Response `protobuf:"bytes,3,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *OperationResponses) Reset() {
	*x = OperationResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResponses) ProtoMessage() {}

func (x *OperationResponses) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResponses.ProtoReflect.Descriptor instead.
func (*OperationResponses) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{43}
}

func (x *OperationResponses) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *OperationResponses) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *OperationResponses) GetResponses() []*Operation_Response {
	if x != nil {
		return x.Responses
	}
	return nil
}

type OutlineScenariosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace *Workspace       `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Filter    *Scenario_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *OutlineScenariosRequest) Reset() {
	*x = OutlineScenariosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutlineScenariosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutlineScenariosRequest) ProtoMessage() {}

func (x *OutlineScenariosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutlineScenariosRequest.ProtoReflect.Descriptor instead.
func (*OutlineScenariosRequest) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{44}
}

func (x *OutlineScenariosRequest) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *OutlineScenariosRequest) GetFilter() *Scenario_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type OutlineScenariosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic       `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Decode      *DecodeResponse     `protobuf:"bytes,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Outlines    []*Scenario_Outline `protobuf:"bytes,3,rep,name=outlines,proto3" json:"outlines,omitempty"`
	Verifies    []*Quality          `protobuf:"bytes,4,rep,name=verifies,proto3" json:"verifies,omitempty"`
}

func (x *OutlineScenariosResponse) Reset() {
	*x = OutlineScenariosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutlineScenariosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutlineScenariosResponse) ProtoMessage() {}

func (x *OutlineScenariosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutlineScenariosResponse.ProtoReflect.Descriptor instead.
func (*OutlineScenariosResponse) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{45}
}

func (x *OutlineScenariosResponse) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *OutlineScenariosResponse) GetDecode() *DecodeResponse {
	if x != nil {
		return x.Decode
	}
	return nil
}

func (x *OutlineScenariosResponse) GetOutlines() []*Scenario_Outline {
	if x != nil {
		return x.Outlines
	}
	return nil
}

func (x *OutlineScenariosResponse) GetVerifies() []*Quality {
	if x != nil {
		return x.Verifies
	}
	return nil
}

// Quality describes a quality chracteristic that a scenario step can verify.
type Quality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Quality) Reset() {
	*x = Quality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quality) ProtoMessage() {}

func (x *Quality) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quality.ProtoReflect.Descriptor instead.
func (*Quality) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{46}
}

func (x *Quality) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Quality) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UI_Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width    uint32             `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	IsTty    bool               `protobuf:"varint,2,opt,name=is_tty,proto3" json:"is_tty,omitempty"`
	UseColor bool               `protobuf:"varint,3,opt,name=use_color,proto3" json:"use_color,omitempty"`
	Format   UI_Settings_Format `protobuf:"varint,4,opt,name=format,proto3,enum=hashicorp.enos.v1.UI_Settings_Format" json:"format,omitempty"`
	Level    UI_Settings_Level  `protobuf:"varint,5,opt,name=level,proto3,enum=hashicorp.enos.v1.UI_Settings_Level" json:"level,omitempty"`
	// stdout_path if defined, we'll write our stdout messages to a file in
	// the given path
	StdoutPath string `protobuf:"bytes,6,opt,name=stdout_path,proto3" json:"stdout_path,omitempty"`
	// stderr_path if defined, we'll write our stderr messages to a file in
	// the given path
	StderrPath string `protobuf:"bytes,7,opt,name=stderr_path,proto3" json:"stderr_path,omitempty"`
	// Render warnings as failures
	FailOnWarnings bool `protobuf:"varint,8,opt,name=fail_on_warnings,proto3" json:"fail_on_warnings,omitempty"`
}

func (x *UI_Settings) Reset() {
	*x = UI_Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UI_Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UI_Settings) ProtoMessage() {}

func (x *UI_Settings) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UI_Settings.ProtoReflect.Descriptor instead.
func (*UI_Settings) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UI_Settings) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UI_Settings) GetIsTty() bool {
	if x != nil {
		return x.IsTty
	}
	return false
}

func (x *UI_Settings) GetUseColor() bool {
	if x != nil {
		return x.UseColor
	}
	return false
}

func (x *UI_Settings) GetFormat() UI_Settings_Format {
	if x != nil {
		return x.Format
	}
	return UI_Settings_FORMAT_UNSPECIFIED
}

func (x *UI_Settings) GetLevel() UI_Settings_Level {
	if x != nil {
		return x.Level
	}
	return UI_Settings_LEVEL_UNSPECIFIED
}

func (x *UI_Settings) GetStdoutPath() string {
	if x != nil {
		return x.StdoutPath
	}
	return ""
}

func (x *UI_Settings) GetStderrPath() string {
	if x != nil {
		return x.StderrPath
	}
	return ""
}

func (x *UI_Settings) GetFailOnWarnings() bool {
	if x != nil {
		return x.FailOnWarnings
	}
	return false
}

type Diagnostic_Snippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context              string                        `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Code                 string                        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	StartLine            int64                         `protobuf:"varint,3,opt,name=start_line,proto3" json:"start_line,omitempty"`
	HighlightStartOffset int64                         `protobuf:"varint,4,opt,name=highlight_start_offset,proto3" json:"highlight_start_offset,omitempty"`
	HighlightEndOffset   int64                         `protobuf:"varint,5,opt,name=highlight_end_offset,proto3" json:"highlight_end_offset,omitempty"`
	Values               []*Diagnostic_ExpressionValue `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Diagnostic_Snippet) Reset() {
	*x = Diagnostic_Snippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic_Snippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic_Snippet) ProtoMessage() {}

func (x *Diagnostic_Snippet) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic_Snippet.ProtoReflect.Descriptor instead.
func (*Diagnostic_Snippet) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Diagnostic_Snippet) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *Diagnostic_Snippet) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Diagnostic_Snippet) GetStartLine() int64 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *Diagnostic_Snippet) GetHighlightStartOffset() int64 {
	if x != nil {
		return x.HighlightStartOffset
	}
	return 0
}

func (x *Diagnostic_Snippet) GetHighlightEndOffset() int64 {
	if x != nil {
		return x.HighlightEndOffset
	}
	return 0
}

func (x *Diagnostic_Snippet) GetValues() []*Diagnostic_ExpressionValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type Diagnostic_ExpressionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traversal string `protobuf:"bytes,1,opt,name=traversal,proto3" json:"traversal,omitempty"`
	Statement string `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *Diagnostic_ExpressionValue) Reset() {
	*x = Diagnostic_ExpressionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diagnostic_ExpressionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic_ExpressionValue) ProtoMessage() {}

func (x *Diagnostic_ExpressionValue) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic_ExpressionValue.ProtoReflect.Descriptor instead.
func (*Diagnostic_ExpressionValue) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Diagnostic_ExpressionValue) GetTraversal() string {
	if x != nil {
		return x.Traversal
	}
	return ""
}

func (x *Diagnostic_ExpressionValue) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

type Range_Pos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line   int64 `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Column int64 `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	Byte   int64 `protobuf:"varint,3,opt,name=byte,proto3" json:"byte,omitempty"`
}

func (x *Range_Pos) Reset() {
	*x = Range_Pos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range_Pos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range_Pos) ProtoMessage() {}

func (x *Range_Pos) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range_Pos.ProtoReflect.Descriptor instead.
func (*Range_Pos) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Range_Pos) GetLine() int64 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Range_Pos) GetColumn() int64 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *Range_Pos) GetByte() int64 {
	if x != nil {
		return x.Byte
	}
	return 0
}

// ID is the unique identification of the scenario and its variants.
type Scenario_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variants    *Matrix_Vector `protobuf:"bytes,2,opt,name=variants,proto3" json:"variants,omitempty"`
	Uid         string         `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Filter      string         `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Description string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Scenario_ID) Reset() {
	*x = Scenario_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario_ID) ProtoMessage() {}

func (x *Scenario_ID) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario_ID.ProtoReflect.Descriptor instead.
func (*Scenario_ID) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Scenario_ID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scenario_ID) GetVariants() *Matrix_Vector {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Scenario_ID) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Scenario_ID) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *Scenario_ID) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Filter is a scenario filter.
type Scenario_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SelectAll          *Scenario_Filter_SelectAll `protobuf:"bytes,2,opt,name=select_all,proto3" json:"select_all,omitempty"`
	Include            *Matrix_Vector             `protobuf:"bytes,3,opt,name=include,proto3" json:"include,omitempty"`
	Exclude            []*Matrix_Exclude          `protobuf:"bytes,4,rep,name=exclude,proto3" json:"exclude,omitempty"`
	IntersectionMatrix *Matrix                    `protobuf:"bytes,5,opt,name=intersection_matrix,proto3" json:"intersection_matrix,omitempty"`
}

func (x *Scenario_Filter) Reset() {
	*x = Scenario_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario_Filter) ProtoMessage() {}

func (x *Scenario_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario_Filter.ProtoReflect.Descriptor instead.
func (*Scenario_Filter) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Scenario_Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scenario_Filter) GetSelectAll() *Scenario_Filter_SelectAll {
	if x != nil {
		return x.SelectAll
	}
	return nil
}

func (x *Scenario_Filter) GetInclude() *Matrix_Vector {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *Scenario_Filter) GetExclude() []*Matrix_Exclude {
	if x != nil {
		return x.Exclude
	}
	return nil
}

func (x *Scenario_Filter) GetIntersectionMatrix() *Matrix {
	if x != nil {
		return x.IntersectionMatrix
	}
	return nil
}

type Scenario_Outline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scenario *Ref_Scenario            `protobuf:"bytes,1,opt,name=scenario,proto3" json:"scenario,omitempty"`
	Matrix   *Matrix                  `protobuf:"bytes,2,opt,name=matrix,proto3" json:"matrix,omitempty"`
	Steps    []*Scenario_Outline_Step `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
	Verifies []*Quality               `protobuf:"bytes,4,rep,name=verifies,proto3" json:"verifies,omitempty"`
}

func (x *Scenario_Outline) Reset() {
	*x = Scenario_Outline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario_Outline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario_Outline) ProtoMessage() {}

func (x *Scenario_Outline) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario_Outline.ProtoReflect.Descriptor instead.
func (*Scenario_Outline) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Scenario_Outline) GetScenario() *Ref_Scenario {
	if x != nil {
		return x.Scenario
	}
	return nil
}

func (x *Scenario_Outline) GetMatrix() *Matrix {
	if x != nil {
		return x.Matrix
	}
	return nil
}

func (x *Scenario_Outline) GetSteps() []*Scenario_Outline_Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Scenario_Outline) GetVerifies() []*Quality {
	if x != nil {
		return x.Verifies
	}
	return nil
}

type Scenario_Filter_SelectAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Scenario_Filter_SelectAll) Reset() {
	*x = Scenario_Filter_SelectAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario_Filter_SelectAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario_Filter_SelectAll) ProtoMessage() {}

func (x *Scenario_Filter_SelectAll) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario_Filter_SelectAll.ProtoReflect.Descriptor instead.
func (*Scenario_Filter_SelectAll) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{6, 1, 0}
}

type Scenario_Outline_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Verifies    []*Quality `protobuf:"bytes,3,rep,name=verifies,proto3" json:"verifies,omitempty"`
}

func (x *Scenario_Outline_Step) Reset() {
	*x = Scenario_Outline_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scenario_Outline_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario_Outline_Step) ProtoMessage() {}

func (x *Scenario_Outline_Step) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario_Outline_Step.ProtoReflect.Descriptor instead.
func (*Scenario_Outline_Step) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{6, 2, 0}
}

func (x *Scenario_Outline_Step) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scenario_Outline_Step) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Scenario_Outline_Step) GetVerifies() []*Quality {
	if x != nil {
		return x.Verifies
	}
	return nil
}

type Operator_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How many operation workers to run
	WorkerCount int32 `protobuf:"varint,1,opt,name=worker_count,json=workerCount,proto3" json:"worker_count,omitempty"`
}

func (x *Operator_Config) Reset() {
	*x = Operator_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator_Config) ProtoMessage() {}

func (x *Operator_Config) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator_Config.ProtoReflect.Descriptor instead.
func (*Operator_Config) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Operator_Config) GetWorkerCount() int32 {
	if x != nil {
		return x.WorkerCount
	}
	return 0
}

// Request is an operation request. This is passed when making requests to
// a server.
type Operation_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scenario  *Ref_Scenario `protobuf:"bytes,1,opt,name=scenario,proto3" json:"scenario,omitempty"`
	Workspace *Workspace    `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Id        string        `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Operation_Request_Generate_
	//	*Operation_Request_Check_
	//	*Operation_Request_Launch_
	//	*Operation_Request_Destroy_
	//	*Operation_Request_Run_
	//	*Operation_Request_Exec_
	//	*Operation_Request_Output_
	Value isOperation_Request_Value `protobuf_oneof:"value"`
}

func (x *Operation_Request) Reset() {
	*x = Operation_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request) ProtoMessage() {}

func (x *Operation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request.ProtoReflect.Descriptor instead.
func (*Operation_Request) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Operation_Request) GetScenario() *Ref_Scenario {
	if x != nil {
		return x.Scenario
	}
	return nil
}

func (x *Operation_Request) GetWorkspace() *Workspace {
	if x != nil {
		return x.Workspace
	}
	return nil
}

func (x *Operation_Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Operation_Request) GetValue() isOperation_Request_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Operation_Request) GetGenerate() *Operation_Request_Generate {
	if x, ok := x.GetValue().(*Operation_Request_Generate_); ok {
		return x.Generate
	}
	return nil
}

func (x *Operation_Request) GetCheck() *Operation_Request_Check {
	if x, ok := x.GetValue().(*Operation_Request_Check_); ok {
		return x.Check
	}
	return nil
}

func (x *Operation_Request) GetLaunch() *Operation_Request_Launch {
	if x, ok := x.GetValue().(*Operation_Request_Launch_); ok {
		return x.Launch
	}
	return nil
}

func (x *Operation_Request) GetDestroy() *Operation_Request_Destroy {
	if x, ok := x.GetValue().(*Operation_Request_Destroy_); ok {
		return x.Destroy
	}
	return nil
}

func (x *Operation_Request) GetRun() *Operation_Request_Run {
	if x, ok := x.GetValue().(*Operation_Request_Run_); ok {
		return x.Run
	}
	return nil
}

func (x *Operation_Request) GetExec() *Operation_Request_Exec {
	if x, ok := x.GetValue().(*Operation_Request_Exec_); ok {
		return x.Exec
	}
	return nil
}

func (x *Operation_Request) GetOutput() *Operation_Request_Output {
	if x, ok := x.GetValue().(*Operation_Request_Output_); ok {
		return x.Output
	}
	return nil
}

type isOperation_Request_Value interface {
	isOperation_Request_Value()
}

type Operation_Request_Generate_ struct {
	Generate *Operation_Request_Generate `protobuf:"bytes,11,opt,name=generate,proto3,oneof"`
}

type Operation_Request_Check_ struct {
	Check *Operation_Request_Check `protobuf:"bytes,12,opt,name=check,proto3,oneof"`
}

type Operation_Request_Launch_ struct {
	Launch *Operation_Request_Launch `protobuf:"bytes,13,opt,name=launch,proto3,oneof"`
}

type Operation_Request_Destroy_ struct {
	Destroy *Operation_Request_Destroy `protobuf:"bytes,14,opt,name=destroy,proto3,oneof"`
}

type Operation_Request_Run_ struct {
	Run *Operation_Request_Run `protobuf:"bytes,15,opt,name=run,proto3,oneof"`
}

type Operation_Request_Exec_ struct {
	Exec *Operation_Request_Exec `protobuf:"bytes,16,opt,name=exec,proto3,oneof"`
}

type Operation_Request_Output_ struct {
	Output *Operation_Request_Output `protobuf:"bytes,17,opt,name=output,proto3,oneof"`
}

func (*Operation_Request_Generate_) isOperation_Request_Value() {}

func (*Operation_Request_Check_) isOperation_Request_Value() {}

func (*Operation_Request_Launch_) isOperation_Request_Value() {}

func (*Operation_Request_Destroy_) isOperation_Request_Value() {}

func (*Operation_Request_Run_) isOperation_Request_Value() {}

func (*Operation_Request_Exec_) isOperation_Request_Value() {}

func (*Operation_Request_Output_) isOperation_Request_Value() {}

// Response is an operation response from a server. The value of the response
// will either be the full response for the operation type or a partial
// event update.
type Operation_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Op          *Ref_Operation   `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Status      Operation_Status `protobuf:"varint,3,opt,name=status,proto3,enum=hashicorp.enos.v1.Operation_Status" json:"status,omitempty"`
	// NOTE: If you add a new or modify value type be sure to update theoperation
	// operation helpers in the diagnostics package and the response writer init
	// the ui package.
	//
	// Types that are assignable to Value:
	//
	//	*Operation_Response_Generate_
	//	*Operation_Response_Check_
	//	*Operation_Response_Launch_
	//	*Operation_Response_Destroy_
	//	*Operation_Response_Run_
	//	*Operation_Response_Exec_
	//	*Operation_Response_Output_
	Value isOperation_Response_Value `protobuf_oneof:"value"`
}

func (x *Operation_Response) Reset() {
	*x = Operation_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response) ProtoMessage() {}

func (x *Operation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response.ProtoReflect.Descriptor instead.
func (*Operation_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Operation_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response) GetOp() *Ref_Operation {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *Operation_Response) GetStatus() Operation_Status {
	if x != nil {
		return x.Status
	}
	return Operation_STATUS_UNSPECIFIED
}

func (m *Operation_Response) GetValue() isOperation_Response_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Operation_Response) GetGenerate() *Operation_Response_Generate {
	if x, ok := x.GetValue().(*Operation_Response_Generate_); ok {
		return x.Generate
	}
	return nil
}

func (x *Operation_Response) GetCheck() *Operation_Response_Check {
	if x, ok := x.GetValue().(*Operation_Response_Check_); ok {
		return x.Check
	}
	return nil
}

func (x *Operation_Response) GetLaunch() *Operation_Response_Launch {
	if x, ok := x.GetValue().(*Operation_Response_Launch_); ok {
		return x.Launch
	}
	return nil
}

func (x *Operation_Response) GetDestroy() *Operation_Response_Destroy {
	if x, ok := x.GetValue().(*Operation_Response_Destroy_); ok {
		return x.Destroy
	}
	return nil
}

func (x *Operation_Response) GetRun() *Operation_Response_Run {
	if x, ok := x.GetValue().(*Operation_Response_Run_); ok {
		return x.Run
	}
	return nil
}

func (x *Operation_Response) GetExec() *Operation_Response_Exec {
	if x, ok := x.GetValue().(*Operation_Response_Exec_); ok {
		return x.Exec
	}
	return nil
}

func (x *Operation_Response) GetOutput() *Operation_Response_Output {
	if x, ok := x.GetValue().(*Operation_Response_Output_); ok {
		return x.Output
	}
	return nil
}

type isOperation_Response_Value interface {
	isOperation_Response_Value()
}

type Operation_Response_Generate_ struct {
	Generate *Operation_Response_Generate `protobuf:"bytes,11,opt,name=generate,proto3,oneof"`
}

type Operation_Response_Check_ struct {
	Check *Operation_Response_Check `protobuf:"bytes,12,opt,name=check,proto3,oneof"`
}

type Operation_Response_Launch_ struct {
	Launch *Operation_Response_Launch `protobuf:"bytes,13,opt,name=launch,proto3,oneof"`
}

type Operation_Response_Destroy_ struct {
	Destroy *Operation_Response_Destroy `protobuf:"bytes,14,opt,name=destroy,proto3,oneof"`
}

type Operation_Response_Run_ struct {
	Run *Operation_Response_Run `protobuf:"bytes,15,opt,name=run,proto3,oneof"`
}

type Operation_Response_Exec_ struct {
	Exec *Operation_Response_Exec `protobuf:"bytes,16,opt,name=exec,proto3,oneof"`
}

type Operation_Response_Output_ struct {
	Output *Operation_Response_Output `protobuf:"bytes,17,opt,name=output,proto3,oneof"`
}

func (*Operation_Response_Generate_) isOperation_Response_Value() {}

func (*Operation_Response_Check_) isOperation_Response_Value() {}

func (*Operation_Response_Launch_) isOperation_Response_Value() {}

func (*Operation_Response_Destroy_) isOperation_Response_Value() {}

func (*Operation_Response_Run_) isOperation_Response_Value() {}

func (*Operation_Response_Exec_) isOperation_Response_Value() {}

func (*Operation_Response_Output_) isOperation_Response_Value() {}

// Events operation updates that can be streamed to the client while an operation
// is in progress
type Operation_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Op          *Ref_Operation   `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Status      Operation_Status `protobuf:"varint,3,opt,name=status,proto3,enum=hashicorp.enos.v1.Operation_Status" json:"status,omitempty"`
	// done is how we tell event listeners that event stream is completed. The
	// worker running the operation is responsible for setting this field when
	// the associated workFunc is completed.
	Done        bool                   `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	// NOTE: If you add a new value type you need to make sure you update the
	// diagnostics and ui packages to handle the new event types.
	//
	// Types that are assignable to Value:
	//
	//	*Operation_Event_Decode
	//	*Operation_Event_Generate
	//	*Operation_Event_Init
	//	*Operation_Event_Validate
	//	*Operation_Event_Plan
	//	*Operation_Event_Apply
	//	*Operation_Event_Destroy
	//	*Operation_Event_Exec
	//	*Operation_Event_Output
	//	*Operation_Event_Show
	Value isOperation_Event_Value `protobuf_oneof:"value"`
}

func (x *Operation_Event) Reset() {
	*x = Operation_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Event) ProtoMessage() {}

func (x *Operation_Event) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Event.ProtoReflect.Descriptor instead.
func (*Operation_Event) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 2}
}

func (x *Operation_Event) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Event) GetOp() *Ref_Operation {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *Operation_Event) GetStatus() Operation_Status {
	if x != nil {
		return x.Status
	}
	return Operation_STATUS_UNSPECIFIED
}

func (x *Operation_Event) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *Operation_Event) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (m *Operation_Event) GetValue() isOperation_Event_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Operation_Event) GetDecode() *DecodeResponse {
	if x, ok := x.GetValue().(*Operation_Event_Decode); ok {
		return x.Decode
	}
	return nil
}

func (x *Operation_Event) GetGenerate() *Operation_Response_Generate {
	if x, ok := x.GetValue().(*Operation_Event_Generate); ok {
		return x.Generate
	}
	return nil
}

func (x *Operation_Event) GetInit() *Terraform_Command_Init_Response {
	if x, ok := x.GetValue().(*Operation_Event_Init); ok {
		return x.Init
	}
	return nil
}

func (x *Operation_Event) GetValidate() *Terraform_Command_Validate_Response {
	if x, ok := x.GetValue().(*Operation_Event_Validate); ok {
		return x.Validate
	}
	return nil
}

func (x *Operation_Event) GetPlan() *Terraform_Command_Plan_Response {
	if x, ok := x.GetValue().(*Operation_Event_Plan); ok {
		return x.Plan
	}
	return nil
}

func (x *Operation_Event) GetApply() *Terraform_Command_Apply_Response {
	if x, ok := x.GetValue().(*Operation_Event_Apply); ok {
		return x.Apply
	}
	return nil
}

func (x *Operation_Event) GetDestroy() *Terraform_Command_Destroy_Response {
	if x, ok := x.GetValue().(*Operation_Event_Destroy); ok {
		return x.Destroy
	}
	return nil
}

func (x *Operation_Event) GetExec() *Terraform_Command_Exec_Response {
	if x, ok := x.GetValue().(*Operation_Event_Exec); ok {
		return x.Exec
	}
	return nil
}

func (x *Operation_Event) GetOutput() *Terraform_Command_Output_Response {
	if x, ok := x.GetValue().(*Operation_Event_Output); ok {
		return x.Output
	}
	return nil
}

func (x *Operation_Event) GetShow() *Terraform_Command_Show_Response {
	if x, ok := x.GetValue().(*Operation_Event_Show); ok {
		return x.Show
	}
	return nil
}

type isOperation_Event_Value interface {
	isOperation_Event_Value()
}

type Operation_Event_Decode struct {
	Decode *DecodeResponse `protobuf:"bytes,10,opt,name=decode,proto3,oneof"`
}

type Operation_Event_Generate struct {
	Generate *Operation_Response_Generate `protobuf:"bytes,11,opt,name=generate,proto3,oneof"`
}

type Operation_Event_Init struct {
	Init *Terraform_Command_Init_Response `protobuf:"bytes,12,opt,name=init,proto3,oneof"`
}

type Operation_Event_Validate struct {
	Validate *Terraform_Command_Validate_Response `protobuf:"bytes,13,opt,name=validate,proto3,oneof"`
}

type Operation_Event_Plan struct {
	Plan *Terraform_Command_Plan_Response `protobuf:"bytes,14,opt,name=plan,proto3,oneof"`
}

type Operation_Event_Apply struct {
	Apply *Terraform_Command_Apply_Response `protobuf:"bytes,15,opt,name=apply,proto3,oneof"`
}

type Operation_Event_Destroy struct {
	Destroy *Terraform_Command_Destroy_Response `protobuf:"bytes,16,opt,name=destroy,proto3,oneof"`
}

type Operation_Event_Exec struct {
	Exec *Terraform_Command_Exec_Response `protobuf:"bytes,17,opt,name=exec,proto3,oneof"`
}

type Operation_Event_Output struct {
	Output *Terraform_Command_Output_Response `protobuf:"bytes,18,opt,name=output,proto3,oneof"`
}

type Operation_Event_Show struct {
	Show *Terraform_Command_Show_Response `protobuf:"bytes,19,opt,name=show,proto3,oneof"`
}

func (*Operation_Event_Decode) isOperation_Event_Value() {}

func (*Operation_Event_Generate) isOperation_Event_Value() {}

func (*Operation_Event_Init) isOperation_Event_Value() {}

func (*Operation_Event_Validate) isOperation_Event_Value() {}

func (*Operation_Event_Plan) isOperation_Event_Value() {}

func (*Operation_Event_Apply) isOperation_Event_Value() {}

func (*Operation_Event_Destroy) isOperation_Event_Value() {}

func (*Operation_Event_Exec) isOperation_Event_Value() {}

func (*Operation_Event_Output) isOperation_Event_Value() {}

func (*Operation_Event_Show) isOperation_Event_Value() {}

type Operation_Request_Generate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Generate) Reset() {
	*x = Operation_Request_Generate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Generate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Generate) ProtoMessage() {}

func (x *Operation_Request_Generate) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Generate.ProtoReflect.Descriptor instead.
func (*Operation_Request_Generate) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 0}
}

type Operation_Request_Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Check) Reset() {
	*x = Operation_Request_Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Check) ProtoMessage() {}

func (x *Operation_Request_Check) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Check.ProtoReflect.Descriptor instead.
func (*Operation_Request_Check) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 1}
}

type Operation_Request_Launch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Launch) Reset() {
	*x = Operation_Request_Launch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Launch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Launch) ProtoMessage() {}

func (x *Operation_Request_Launch) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Launch.ProtoReflect.Descriptor instead.
func (*Operation_Request_Launch) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 2}
}

type Operation_Request_Destroy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Destroy) Reset() {
	*x = Operation_Request_Destroy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Destroy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Destroy) ProtoMessage() {}

func (x *Operation_Request_Destroy) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Destroy.ProtoReflect.Descriptor instead.
func (*Operation_Request_Destroy) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 3}
}

type Operation_Request_Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Run) Reset() {
	*x = Operation_Request_Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Run) ProtoMessage() {}

func (x *Operation_Request_Run) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Run.ProtoReflect.Descriptor instead.
func (*Operation_Request_Run) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 4}
}

type Operation_Request_Exec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Exec) Reset() {
	*x = Operation_Request_Exec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Exec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Exec) ProtoMessage() {}

func (x *Operation_Request_Exec) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Exec.ProtoReflect.Descriptor instead.
func (*Operation_Request_Exec) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 5}
}

type Operation_Request_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Operation_Request_Output) Reset() {
	*x = Operation_Request_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Request_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Request_Output) ProtoMessage() {}

func (x *Operation_Request_Output) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Request_Output.ProtoReflect.Descriptor instead.
func (*Operation_Request_Output) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 0, 6}
}

type Operation_Response_Generate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics     []*Diagnostic     `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	TerraformModule *Terraform_Module `protobuf:"bytes,2,opt,name=terraform_module,proto3" json:"terraform_module,omitempty"`
}

func (x *Operation_Response_Generate) Reset() {
	*x = Operation_Response_Generate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Generate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Generate) ProtoMessage() {}

func (x *Operation_Response_Generate) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Generate.ProtoReflect.Descriptor instead.
func (*Operation_Response_Generate) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *Operation_Response_Generate) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Generate) GetTerraformModule() *Terraform_Module {
	if x != nil {
		return x.TerraformModule
	}
	return nil
}

type Operation_Response_Check struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic                        `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Generate    *Operation_Response_Generate         `protobuf:"bytes,2,opt,name=generate,proto3" json:"generate,omitempty"`
	Init        *Terraform_Command_Init_Response     `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"`
	Validate    *Terraform_Command_Validate_Response `protobuf:"bytes,4,opt,name=validate,proto3" json:"validate,omitempty"`
	Plan        *Terraform_Command_Plan_Response     `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *Operation_Response_Check) Reset() {
	*x = Operation_Response_Check{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Check) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Check) ProtoMessage() {}

func (x *Operation_Response_Check) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Check.ProtoReflect.Descriptor instead.
func (*Operation_Response_Check) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 1}
}

func (x *Operation_Response_Check) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Check) GetGenerate() *Operation_Response_Generate {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *Operation_Response_Check) GetInit() *Terraform_Command_Init_Response {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *Operation_Response_Check) GetValidate() *Terraform_Command_Validate_Response {
	if x != nil {
		return x.Validate
	}
	return nil
}

func (x *Operation_Response_Check) GetPlan() *Terraform_Command_Plan_Response {
	if x != nil {
		return x.Plan
	}
	return nil
}

type Operation_Response_Launch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic                        `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Generate    *Operation_Response_Generate         `protobuf:"bytes,2,opt,name=generate,proto3" json:"generate,omitempty"`
	Init        *Terraform_Command_Init_Response     `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"`
	Validate    *Terraform_Command_Validate_Response `protobuf:"bytes,4,opt,name=validate,proto3" json:"validate,omitempty"`
	Plan        *Terraform_Command_Plan_Response     `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
	Apply       *Terraform_Command_Apply_Response    `protobuf:"bytes,6,opt,name=apply,proto3" json:"apply,omitempty"`
}

func (x *Operation_Response_Launch) Reset() {
	*x = Operation_Response_Launch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Launch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Launch) ProtoMessage() {}

func (x *Operation_Response_Launch) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Launch.ProtoReflect.Descriptor instead.
func (*Operation_Response_Launch) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 2}
}

func (x *Operation_Response_Launch) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Launch) GetGenerate() *Operation_Response_Generate {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *Operation_Response_Launch) GetInit() *Terraform_Command_Init_Response {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *Operation_Response_Launch) GetValidate() *Terraform_Command_Validate_Response {
	if x != nil {
		return x.Validate
	}
	return nil
}

func (x *Operation_Response_Launch) GetPlan() *Terraform_Command_Plan_Response {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *Operation_Response_Launch) GetApply() *Terraform_Command_Apply_Response {
	if x != nil {
		return x.Apply
	}
	return nil
}

type Operation_Response_Destroy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics    []*Diagnostic                       `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	PriorStateShow *Terraform_Command_Show_Response    `protobuf:"bytes,5,opt,name=prior_state_show,json=priorStateShow,proto3" json:"prior_state_show,omitempty"`
	Generate       *Operation_Response_Generate        `protobuf:"bytes,2,opt,name=generate,proto3" json:"generate,omitempty"`
	Init           *Terraform_Command_Init_Response    `protobuf:"bytes,4,opt,name=init,proto3" json:"init,omitempty"`
	Destroy        *Terraform_Command_Destroy_Response `protobuf:"bytes,3,opt,name=destroy,proto3" json:"destroy,omitempty"`
}

func (x *Operation_Response_Destroy) Reset() {
	*x = Operation_Response_Destroy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Destroy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Destroy) ProtoMessage() {}

func (x *Operation_Response_Destroy) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Destroy.ProtoReflect.Descriptor instead.
func (*Operation_Response_Destroy) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 3}
}

func (x *Operation_Response_Destroy) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Destroy) GetPriorStateShow() *Terraform_Command_Show_Response {
	if x != nil {
		return x.PriorStateShow
	}
	return nil
}

func (x *Operation_Response_Destroy) GetGenerate() *Operation_Response_Generate {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *Operation_Response_Destroy) GetInit() *Terraform_Command_Init_Response {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *Operation_Response_Destroy) GetDestroy() *Terraform_Command_Destroy_Response {
	if x != nil {
		return x.Destroy
	}
	return nil
}

type Operation_Response_Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics    []*Diagnostic                        `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Generate       *Operation_Response_Generate         `protobuf:"bytes,2,opt,name=generate,proto3" json:"generate,omitempty"`
	Init           *Terraform_Command_Init_Response     `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"`
	Validate       *Terraform_Command_Validate_Response `protobuf:"bytes,4,opt,name=validate,proto3" json:"validate,omitempty"`
	Plan           *Terraform_Command_Plan_Response     `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
	Apply          *Terraform_Command_Apply_Response    `protobuf:"bytes,6,opt,name=apply,proto3" json:"apply,omitempty"`
	PriorStateShow *Terraform_Command_Show_Response     `protobuf:"bytes,8,opt,name=prior_state_show,json=priorStateShow,proto3" json:"prior_state_show,omitempty"`
	Destroy        *Terraform_Command_Destroy_Response  `protobuf:"bytes,7,opt,name=destroy,proto3" json:"destroy,omitempty"`
}

func (x *Operation_Response_Run) Reset() {
	*x = Operation_Response_Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Run) ProtoMessage() {}

func (x *Operation_Response_Run) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Run.ProtoReflect.Descriptor instead.
func (*Operation_Response_Run) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 4}
}

func (x *Operation_Response_Run) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Run) GetGenerate() *Operation_Response_Generate {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *Operation_Response_Run) GetInit() *Terraform_Command_Init_Response {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *Operation_Response_Run) GetValidate() *Terraform_Command_Validate_Response {
	if x != nil {
		return x.Validate
	}
	return nil
}

func (x *Operation_Response_Run) GetPlan() *Terraform_Command_Plan_Response {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *Operation_Response_Run) GetApply() *Terraform_Command_Apply_Response {
	if x != nil {
		return x.Apply
	}
	return nil
}

func (x *Operation_Response_Run) GetPriorStateShow() *Terraform_Command_Show_Response {
	if x != nil {
		return x.PriorStateShow
	}
	return nil
}

func (x *Operation_Response_Run) GetDestroy() *Terraform_Command_Destroy_Response {
	if x != nil {
		return x.Destroy
	}
	return nil
}

type Operation_Response_Exec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics     []*Diagnostic                    `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	TerraformModule *Terraform_Module                `protobuf:"bytes,2,opt,name=terraform_module,proto3" json:"terraform_module,omitempty"`
	Exec            *Terraform_Command_Exec_Response `protobuf:"bytes,3,opt,name=exec,proto3" json:"exec,omitempty"`
}

func (x *Operation_Response_Exec) Reset() {
	*x = Operation_Response_Exec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Exec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Exec) ProtoMessage() {}

func (x *Operation_Response_Exec) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Exec.ProtoReflect.Descriptor instead.
func (*Operation_Response_Exec) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 5}
}

func (x *Operation_Response_Exec) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Exec) GetTerraformModule() *Terraform_Module {
	if x != nil {
		return x.TerraformModule
	}
	return nil
}

func (x *Operation_Response_Exec) GetExec() *Terraform_Command_Exec_Response {
	if x != nil {
		return x.Exec
	}
	return nil
}

type Operation_Response_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics     []*Diagnostic                      `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	TerraformModule *Terraform_Module                  `protobuf:"bytes,2,opt,name=terraform_module,proto3" json:"terraform_module,omitempty"`
	Output          *Terraform_Command_Output_Response `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *Operation_Response_Output) Reset() {
	*x = Operation_Response_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation_Response_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation_Response_Output) ProtoMessage() {}

func (x *Operation_Response_Output) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation_Response_Output.ProtoReflect.Descriptor instead.
func (*Operation_Response_Output) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{8, 1, 6}
}

func (x *Operation_Response_Output) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Operation_Response_Output) GetTerraformModule() *Terraform_Module {
	if x != nil {
		return x.TerraformModule
	}
	return nil
}

func (x *Operation_Response_Output) GetOutput() *Terraform_Command_Output_Response {
	if x != nil {
		return x.Output
	}
	return nil
}

type Terraform_Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModulePath  string        `protobuf:"bytes,1,opt,name=module_path,proto3" json:"module_path,omitempty"`
	RcPath      string        `protobuf:"bytes,2,opt,name=rc_path,proto3" json:"rc_path,omitempty"`
	ScenarioRef *Ref_Scenario `protobuf:"bytes,3,opt,name=scenario_ref,json=scenario,proto3" json:"scenario_ref,omitempty"`
}

func (x *Terraform_Module) Reset() {
	*x = Terraform_Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Module) ProtoMessage() {}

func (x *Terraform_Module) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Module.ProtoReflect.Descriptor instead.
func (*Terraform_Module) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Terraform_Module) GetModulePath() string {
	if x != nil {
		return x.ModulePath
	}
	return ""
}

func (x *Terraform_Module) GetRcPath() string {
	if x != nil {
		return x.RcPath
	}
	return ""
}

func (x *Terraform_Module) GetScenarioRef() *Ref_Scenario {
	if x != nil {
		return x.ScenarioRef
	}
	return nil
}

type Terraform_Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command) Reset() {
	*x = Terraform_Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command) ProtoMessage() {}

func (x *Terraform_Command) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command.ProtoReflect.Descriptor instead.
func (*Terraform_Command) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1}
}

type Terraform_Runner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Terraform_Runner_Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Terraform_Runner) Reset() {
	*x = Terraform_Runner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Runner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Runner) ProtoMessage() {}

func (x *Terraform_Runner) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Runner.ProtoReflect.Descriptor instead.
func (*Terraform_Runner) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 2}
}

func (x *Terraform_Runner) GetConfig() *Terraform_Runner_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type Terraform_Command_Init struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Init) Reset() {
	*x = Terraform_Command_Init{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Init) ProtoMessage() {}

func (x *Terraform_Command_Init) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Init.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Init) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 0}
}

type Terraform_Command_Validate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Validate) Reset() {
	*x = Terraform_Command_Validate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Validate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Validate) ProtoMessage() {}

func (x *Terraform_Command_Validate) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Validate.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Validate) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 1}
}

type Terraform_Command_Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Plan) Reset() {
	*x = Terraform_Command_Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Plan) ProtoMessage() {}

func (x *Terraform_Command_Plan) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Plan.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Plan) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 2}
}

type Terraform_Command_Apply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Apply) Reset() {
	*x = Terraform_Command_Apply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Apply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Apply) ProtoMessage() {}

func (x *Terraform_Command_Apply) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Apply.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Apply) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 3}
}

type Terraform_Command_Destroy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Destroy) Reset() {
	*x = Terraform_Command_Destroy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Destroy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Destroy) ProtoMessage() {}

func (x *Terraform_Command_Destroy) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Destroy.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Destroy) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 4}
}

type Terraform_Command_Exec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Exec) Reset() {
	*x = Terraform_Command_Exec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Exec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Exec) ProtoMessage() {}

func (x *Terraform_Command_Exec) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Exec.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Exec) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 5}
}

type Terraform_Command_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Output) Reset() {
	*x = Terraform_Command_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Output) ProtoMessage() {}

func (x *Terraform_Command_Output) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Output.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Output) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 6}
}

type Terraform_Command_Show struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Terraform_Command_Show) Reset() {
	*x = Terraform_Command_Show{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Show) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Show) ProtoMessage() {}

func (x *Terraform_Command_Show) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Show.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Show) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 7}
}

type Terraform_Command_Init_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Stderr      string        `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Terraform_Command_Init_Response) Reset() {
	*x = Terraform_Command_Init_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Init_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Init_Response) ProtoMessage() {}

func (x *Terraform_Command_Init_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Init_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Init_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 0, 0}
}

func (x *Terraform_Command_Init_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Init_Response) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type Terraform_Command_Validate_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics   []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Valid         bool          `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	ErrorCount    int64         `protobuf:"varint,3,opt,name=error_count,proto3" json:"error_count,omitempty"`
	WarningCount  int64         `protobuf:"varint,4,opt,name=warning_count,proto3" json:"warning_count,omitempty"`
	FormatVersion string        `protobuf:"bytes,5,opt,name=format_version,proto3" json:"format_version,omitempty"`
}

func (x *Terraform_Command_Validate_Response) Reset() {
	*x = Terraform_Command_Validate_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Validate_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Validate_Response) ProtoMessage() {}

func (x *Terraform_Command_Validate_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Validate_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Validate_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 1, 0}
}

func (x *Terraform_Command_Validate_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Validate_Response) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Terraform_Command_Validate_Response) GetErrorCount() int64 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *Terraform_Command_Validate_Response) GetWarningCount() int64 {
	if x != nil {
		return x.WarningCount
	}
	return 0
}

func (x *Terraform_Command_Validate_Response) GetFormatVersion() string {
	if x != nil {
		return x.FormatVersion
	}
	return ""
}

type Terraform_Command_Plan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics    []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	ChangesPresent bool          `protobuf:"varint,2,opt,name=changes_present,proto3" json:"changes_present,omitempty"`
	Stderr         string        `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Terraform_Command_Plan_Response) Reset() {
	*x = Terraform_Command_Plan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Plan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Plan_Response) ProtoMessage() {}

func (x *Terraform_Command_Plan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Plan_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Plan_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 2, 0}
}

func (x *Terraform_Command_Plan_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Plan_Response) GetChangesPresent() bool {
	if x != nil {
		return x.ChangesPresent
	}
	return false
}

func (x *Terraform_Command_Plan_Response) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type Terraform_Command_Apply_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Stderr      string        `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Terraform_Command_Apply_Response) Reset() {
	*x = Terraform_Command_Apply_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Apply_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Apply_Response) ProtoMessage() {}

func (x *Terraform_Command_Apply_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Apply_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Apply_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 3, 0}
}

func (x *Terraform_Command_Apply_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Apply_Response) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type Terraform_Command_Destroy_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Stderr      string        `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Terraform_Command_Destroy_Response) Reset() {
	*x = Terraform_Command_Destroy_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Destroy_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Destroy_Response) ProtoMessage() {}

func (x *Terraform_Command_Destroy_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Destroy_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Destroy_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 4, 0}
}

func (x *Terraform_Command_Destroy_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Destroy_Response) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type Terraform_Command_Exec_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	SubCommand  string        `protobuf:"bytes,2,opt,name=sub_command,proto3" json:"sub_command,omitempty"`
	Stderr      string        `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Stdout      string        `protobuf:"bytes,4,opt,name=stdout,proto3" json:"stdout,omitempty"`
}

func (x *Terraform_Command_Exec_Response) Reset() {
	*x = Terraform_Command_Exec_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Exec_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Exec_Response) ProtoMessage() {}

func (x *Terraform_Command_Exec_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Exec_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Exec_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 5, 0}
}

func (x *Terraform_Command_Exec_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Exec_Response) GetSubCommand() string {
	if x != nil {
		return x.SubCommand
	}
	return ""
}

func (x *Terraform_Command_Exec_Response) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *Terraform_Command_Exec_Response) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

type Terraform_Command_Output_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic                             `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Meta        []*Terraform_Command_Output_Response_Meta `protobuf:"bytes,2,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Terraform_Command_Output_Response) Reset() {
	*x = Terraform_Command_Output_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Output_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Output_Response) ProtoMessage() {}

func (x *Terraform_Command_Output_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Output_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Output_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 6, 0}
}

func (x *Terraform_Command_Output_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Output_Response) GetMeta() []*Terraform_Command_Output_Response_Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type Terraform_Command_Output_Response_Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      []byte `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Value     []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Sensitive bool   `protobuf:"varint,4,opt,name=sensitive,proto3" json:"sensitive,omitempty"`
	Stderr    string `protobuf:"bytes,5,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Terraform_Command_Output_Response_Meta) Reset() {
	*x = Terraform_Command_Output_Response_Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Output_Response_Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Output_Response_Meta) ProtoMessage() {}

func (x *Terraform_Command_Output_Response_Meta) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Output_Response_Meta.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Output_Response_Meta) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 6, 0, 0}
}

func (x *Terraform_Command_Output_Response_Meta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Terraform_Command_Output_Response_Meta) GetType() []byte {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Terraform_Command_Output_Response_Meta) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Terraform_Command_Output_Response_Meta) GetSensitive() bool {
	if x != nil {
		return x.Sensitive
	}
	return false
}

func (x *Terraform_Command_Output_Response_Meta) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type Terraform_Command_Show_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	// For now, we pass the entire state over the wire as a tfjson.State JSON
	// representation. You can unmarshal the value into that Go type if
	// necessary.
	State []byte `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Terraform_Command_Show_Response) Reset() {
	*x = Terraform_Command_Show_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Command_Show_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Command_Show_Response) ProtoMessage() {}

func (x *Terraform_Command_Show_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Command_Show_Response.ProtoReflect.Descriptor instead.
func (*Terraform_Command_Show_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 1, 7, 0}
}

func (x *Terraform_Command_Show_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Terraform_Command_Show_Response) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

type Terraform_Runner_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Terraform CLI flags
	Flags *Terraform_Runner_Config_Flags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	// The path to the terraform binary
	BinPath string `protobuf:"bytes,2,opt,name=bin_path,json=binPath,proto3" json:"bin_path,omitempty"`
	// Where the .terraformrc configuration is
	ConfigPath string `protobuf:"bytes,3,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// The directory from which to execute Terraform
	WorkingDirPath string `protobuf:"bytes,4,opt,name=working_dir_path,json=workingDirPath,proto3" json:"working_dir_path,omitempty"`
	// Environment variables to set when executing Terraform
	Env map[string]string `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// User supplied sub-command
	UserSubCommand string `protobuf:"bytes,6,opt,name=user_sub_command,json=userSubCommand,proto3" json:"user_sub_command,omitempty"`
	// Output filter
	OutputFilter string `protobuf:"bytes,7,opt,name=output_filter,json=outputFilter,proto3" json:"output_filter,omitempty"`
	// Fail on warnings
	FailOnWarnings bool `protobuf:"varint,8,opt,name=fail_on_warnings,json=failOnWarnings,proto3" json:"fail_on_warnings,omitempty"`
}

func (x *Terraform_Runner_Config) Reset() {
	*x = Terraform_Runner_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Runner_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Runner_Config) ProtoMessage() {}

func (x *Terraform_Runner_Config) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Runner_Config.ProtoReflect.Descriptor instead.
func (*Terraform_Runner_Config) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 2, 0}
}

func (x *Terraform_Runner_Config) GetFlags() *Terraform_Runner_Config_Flags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Terraform_Runner_Config) GetBinPath() string {
	if x != nil {
		return x.BinPath
	}
	return ""
}

func (x *Terraform_Runner_Config) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *Terraform_Runner_Config) GetWorkingDirPath() string {
	if x != nil {
		return x.WorkingDirPath
	}
	return ""
}

func (x *Terraform_Runner_Config) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Terraform_Runner_Config) GetUserSubCommand() string {
	if x != nil {
		return x.UserSubCommand
	}
	return ""
}

func (x *Terraform_Runner_Config) GetOutputFilter() string {
	if x != nil {
		return x.OutputFilter
	}
	return ""
}

func (x *Terraform_Runner_Config) GetFailOnWarnings() bool {
	if x != nil {
		return x.FailOnWarnings
	}
	return false
}

// Flags are a subset of the Terraform flags that we allow to be settable.
type Terraform_Runner_Config_Flags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// -backup=path
	BackupStateFilePath string `protobuf:"bytes,1,opt,name=backup_state_file_path,json=backupStateFilePath,proto3" json:"backup_state_file_path,omitempty"`
	// -lock-timeout=10s
	LockTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	// -backend=false
	NoBackend bool `protobuf:"varint,3,opt,name=no_backend,json=noBackend,proto3" json:"no_backend,omitempty"`
	// -lock=false
	NoLock bool `protobuf:"varint,4,opt,name=no_lock,json=noLock,proto3" json:"no_lock,omitempty"`
	// -get=false
	NoDownload bool `protobuf:"varint,5,opt,name=no_download,json=noDownload,proto3" json:"no_download,omitempty"`
	// -refresh=false
	NoRefresh bool `protobuf:"varint,6,opt,name=no_refresh,json=noRefresh,proto3" json:"no_refresh,omitempty"`
	// -parallelism=n
	Parallelism uint32 `protobuf:"varint,7,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	// -refresh-only
	RefreshOnly bool `protobuf:"varint,8,opt,name=refresh_only,json=refreshOnly,proto3" json:"refresh_only,omitempty"`
	// -upgrade
	Upgrade bool `protobuf:"varint,9,opt,name=upgrade,proto3" json:"upgrade,omitempty"`
	// -reconfigure=false
	NoReconfigure bool `protobuf:"varint,10,opt,name=no_reconfigure,json=noReconfigure,proto3" json:"no_reconfigure,omitempty"`
}

func (x *Terraform_Runner_Config_Flags) Reset() {
	*x = Terraform_Runner_Config_Flags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Terraform_Runner_Config_Flags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Terraform_Runner_Config_Flags) ProtoMessage() {}

func (x *Terraform_Runner_Config_Flags) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Terraform_Runner_Config_Flags.ProtoReflect.Descriptor instead.
func (*Terraform_Runner_Config_Flags) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{9, 2, 0, 1}
}

func (x *Terraform_Runner_Config_Flags) GetBackupStateFilePath() string {
	if x != nil {
		return x.BackupStateFilePath
	}
	return ""
}

func (x *Terraform_Runner_Config_Flags) GetLockTimeout() *durationpb.Duration {
	if x != nil {
		return x.LockTimeout
	}
	return nil
}

func (x *Terraform_Runner_Config_Flags) GetNoBackend() bool {
	if x != nil {
		return x.NoBackend
	}
	return false
}

func (x *Terraform_Runner_Config_Flags) GetNoLock() bool {
	if x != nil {
		return x.NoLock
	}
	return false
}

func (x *Terraform_Runner_Config_Flags) GetNoDownload() bool {
	if x != nil {
		return x.NoDownload
	}
	return false
}

func (x *Terraform_Runner_Config_Flags) GetNoRefresh() bool {
	if x != nil {
		return x.NoRefresh
	}
	return false
}

func (x *Terraform_Runner_Config_Flags) GetParallelism() uint32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *Terraform_Runner_Config_Flags) GetRefreshOnly() bool {
	if x != nil {
		return x.RefreshOnly
	}
	return false
}

func (x *Terraform_Runner_Config_Flags) GetUpgrade() bool {
	if x != nil {
		return x.Upgrade
	}
	return false
}

func (x *Terraform_Runner_Config_Flags) GetNoReconfigure() bool {
	if x != nil {
		return x.NoReconfigure
	}
	return false
}

type Matrix_Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Matrix_Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *Matrix_Vector) Reset() {
	*x = Matrix_Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matrix_Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matrix_Vector) ProtoMessage() {}

func (x *Matrix_Vector) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matrix_Vector.ProtoReflect.Descriptor instead.
func (*Matrix_Vector) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Matrix_Vector) GetElements() []*Matrix_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

type Matrix_Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Matrix_Element) Reset() {
	*x = Matrix_Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matrix_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matrix_Element) ProtoMessage() {}

func (x *Matrix_Element) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matrix_Element.ProtoReflect.Descriptor instead.
func (*Matrix_Element) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Matrix_Element) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Matrix_Element) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Matrix_Exclude struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector *Matrix_Vector      `protobuf:"bytes,1,opt,name=vector,proto3" json:"vector,omitempty"`
	Mode   Matrix_Exclude_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=hashicorp.enos.v1.Matrix_Exclude_Mode" json:"mode,omitempty"`
}

func (x *Matrix_Exclude) Reset() {
	*x = Matrix_Exclude{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matrix_Exclude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matrix_Exclude) ProtoMessage() {}

func (x *Matrix_Exclude) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matrix_Exclude.ProtoReflect.Descriptor instead.
func (*Matrix_Exclude) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Matrix_Exclude) GetVector() *Matrix_Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Matrix_Exclude) GetMode() Matrix_Exclude_Mode {
	if x != nil {
		return x.Mode
	}
	return Matrix_Exclude_MODE_UNSPECIFIED
}

// ID is the unique identification of the sample and its subsets.
type Sample_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Sample_ID) Reset() {
	*x = Sample_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_ID) ProtoMessage() {}

func (x *Sample_ID) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_ID.ProtoReflect.Descriptor instead.
func (*Sample_ID) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Sample_ID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// A subet refers to a scenario subset of a matrix.
type Sample_Subset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *Sample_Subset_ID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ScenarioName   string              `protobuf:"bytes,2,opt,name=scenario_name,proto3" json:"scenario_name,omitempty"`
	ScenarioFilter string              `protobuf:"bytes,3,opt,name=scenario_filter,proto3" json:"scenario_filter,omitempty"`
	Attributes     []*Sample_Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Matrix         *Matrix             `protobuf:"bytes,5,opt,name=matrix,proto3" json:"matrix,omitempty"`
}

func (x *Sample_Subset) Reset() {
	*x = Sample_Subset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_Subset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_Subset) ProtoMessage() {}

func (x *Sample_Subset) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_Subset.ProtoReflect.Descriptor instead.
func (*Sample_Subset) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 1}
}

func (x *Sample_Subset) GetId() *Sample_Subset_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Sample_Subset) GetScenarioName() string {
	if x != nil {
		return x.ScenarioName
	}
	return ""
}

func (x *Sample_Subset) GetScenarioFilter() string {
	if x != nil {
		return x.ScenarioFilter
	}
	return ""
}

func (x *Sample_Subset) GetAttributes() []*Sample_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Sample_Subset) GetMatrix() *Matrix {
	if x != nil {
		return x.Matrix
	}
	return nil
}

// A filter lets us dynamically filter our sample frame, limit our sample observation, or control
// the randomness seed for deterministic observations.
type Sample_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sample         *Ref_Sample         `protobuf:"bytes,1,opt,name=sample,proto3" json:"sample,omitempty"`
	Subsets        []*Sample_Subset_ID `protobuf:"bytes,2,rep,name=subsets,proto3" json:"subsets,omitempty"`
	ExcludeSubsets []*Sample_Subset_ID `protobuf:"bytes,3,rep,name=exclude_subsets,proto3" json:"exclude_subsets,omitempty"`
	MaxElements    int32               `protobuf:"varint,4,opt,name=max_elements,json=maxElements,proto3" json:"max_elements,omitempty"`
	MinElements    int32               `protobuf:"varint,5,opt,name=min_elements,json=minElements,proto3" json:"min_elements,omitempty"`
	Percentage     float32             `protobuf:"fixed32,6,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Seed           int64               `protobuf:"varint,7,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *Sample_Filter) Reset() {
	*x = Sample_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_Filter) ProtoMessage() {}

func (x *Sample_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_Filter.ProtoReflect.Descriptor instead.
func (*Sample_Filter) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 2}
}

func (x *Sample_Filter) GetSample() *Ref_Sample {
	if x != nil {
		return x.Sample
	}
	return nil
}

func (x *Sample_Filter) GetSubsets() []*Sample_Subset_ID {
	if x != nil {
		return x.Subsets
	}
	return nil
}

func (x *Sample_Filter) GetExcludeSubsets() []*Sample_Subset_ID {
	if x != nil {
		return x.ExcludeSubsets
	}
	return nil
}

func (x *Sample_Filter) GetMaxElements() int32 {
	if x != nil {
		return x.MaxElements
	}
	return 0
}

func (x *Sample_Filter) GetMinElements() int32 {
	if x != nil {
		return x.MinElements
	}
	return 0
}

func (x *Sample_Filter) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *Sample_Filter) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

// A sample element is one instance of the sample observation.
type Sample_Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sample     *Ref_Sample        `protobuf:"bytes,1,opt,name=sample,proto3" json:"sample,omitempty"`
	Subset     *Ref_Sample_Subset `protobuf:"bytes,2,opt,name=subset,proto3" json:"subset,omitempty"`
	Scenario   *Ref_Scenario      `protobuf:"bytes,3,opt,name=scenario,proto3" json:"scenario,omitempty"`
	Attributes *structpb.Struct   `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Sample_Element) Reset() {
	*x = Sample_Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_Element) ProtoMessage() {}

func (x *Sample_Element) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_Element.ProtoReflect.Descriptor instead.
func (*Sample_Element) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 3}
}

func (x *Sample_Element) GetSample() *Ref_Sample {
	if x != nil {
		return x.Sample
	}
	return nil
}

func (x *Sample_Element) GetSubset() *Ref_Sample_Subset {
	if x != nil {
		return x.Subset
	}
	return nil
}

func (x *Sample_Element) GetScenario() *Ref_Scenario {
	if x != nil {
		return x.Scenario
	}
	return nil
}

func (x *Sample_Element) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// A sample observation the result of taking a sample.
type Sample_Observation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic     `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Elements    []*Sample_Element `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	Filter      *Sample_Filter    `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *Sample_Observation) Reset() {
	*x = Sample_Observation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_Observation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_Observation) ProtoMessage() {}

func (x *Sample_Observation) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_Observation.ProtoReflect.Descriptor instead.
func (*Sample_Observation) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 4}
}

func (x *Sample_Observation) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *Sample_Observation) GetElements() []*Sample_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *Sample_Observation) GetFilter() *Sample_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Attributes are various metadata that was injected into a sample element.
type Sample_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// To support unknown schema we pass the attributes as JSON encoded cty types and values.
	CtyType  []byte `protobuf:"bytes,2,opt,name=cty_type,proto3" json:"cty_type,omitempty"`
	CtyValue []byte `protobuf:"bytes,3,opt,name=cty_value,proto3" json:"cty_value,omitempty"`
}

func (x *Sample_Attribute) Reset() {
	*x = Sample_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_Attribute) ProtoMessage() {}

func (x *Sample_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_Attribute.ProtoReflect.Descriptor instead.
func (*Sample_Attribute) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 5}
}

func (x *Sample_Attribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Sample_Attribute) GetCtyType() []byte {
	if x != nil {
		return x.CtyType
	}
	return nil
}

func (x *Sample_Attribute) GetCtyValue() []byte {
	if x != nil {
		return x.CtyValue
	}
	return nil
}

type Sample_Subset_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Sample_Subset_ID) Reset() {
	*x = Sample_Subset_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample_Subset_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample_Subset_ID) ProtoMessage() {}

func (x *Sample_Subset_ID) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample_Subset_ID.ProtoReflect.Descriptor instead.
func (*Sample_Subset_ID) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{11, 1, 0}
}

func (x *Sample_Subset_ID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ref_Scenario struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Scenario_ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Ref_Scenario) Reset() {
	*x = Ref_Scenario{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Scenario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Scenario) ProtoMessage() {}

func (x *Ref_Scenario) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Scenario.ProtoReflect.Descriptor instead.
func (*Ref_Scenario) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Ref_Scenario) GetId() *Scenario_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type Ref_Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Scenario *Ref_Scenario `protobuf:"bytes,2,opt,name=scenario,proto3" json:"scenario,omitempty"`
}

func (x *Ref_Operation) Reset() {
	*x = Ref_Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Operation) ProtoMessage() {}

func (x *Ref_Operation) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Operation.ProtoReflect.Descriptor instead.
func (*Ref_Operation) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Ref_Operation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ref_Operation) GetScenario() *Ref_Scenario {
	if x != nil {
		return x.Scenario
	}
	return nil
}

type Ref_Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Sample_ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Ref_Sample) Reset() {
	*x = Ref_Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Sample) ProtoMessage() {}

func (x *Ref_Sample) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Sample.ProtoReflect.Descriptor instead.
func (*Ref_Sample) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{12, 2}
}

func (x *Ref_Sample) GetId() *Sample_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type Ref_Sample_Subset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Sample_Subset_ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Ref_Sample_Subset) Reset() {
	*x = Ref_Sample_Subset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Sample_Subset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Sample_Subset) ProtoMessage() {}

func (x *Ref_Sample_Subset) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Sample_Subset.ProtoReflect.Descriptor instead.
func (*Ref_Sample_Subset) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{12, 2, 0}
}

func (x *Ref_Sample_Subset) GetId() *Sample_Subset_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type FormatRequest_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Body []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *FormatRequest_File) Reset() {
	*x = FormatRequest_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatRequest_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatRequest_File) ProtoMessage() {}

func (x *FormatRequest_File) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatRequest_File.ProtoReflect.Descriptor instead.
func (*FormatRequest_File) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{37, 0}
}

func (x *FormatRequest_File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FormatRequest_File) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type FormatRequest_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Write     bool `protobuf:"varint,1,opt,name=write,proto3" json:"write,omitempty"`
	List      bool `protobuf:"varint,2,opt,name=list,proto3" json:"list,omitempty"`
	Check     bool `protobuf:"varint,3,opt,name=check,proto3" json:"check,omitempty"`
	Diff      bool `protobuf:"varint,4,opt,name=diff,proto3" json:"diff,omitempty"`
	Recursive bool `protobuf:"varint,5,opt,name=recursive,proto3" json:"recursive,omitempty"`
}

func (x *FormatRequest_Config) Reset() {
	*x = FormatRequest_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatRequest_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatRequest_Config) ProtoMessage() {}

func (x *FormatRequest_Config) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatRequest_Config.ProtoReflect.Descriptor instead.
func (*FormatRequest_Config) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{37, 1}
}

func (x *FormatRequest_Config) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

func (x *FormatRequest_Config) GetList() bool {
	if x != nil {
		return x.List
	}
	return false
}

func (x *FormatRequest_Config) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *FormatRequest_Config) GetDiff() bool {
	if x != nil {
		return x.Diff
	}
	return false
}

func (x *FormatRequest_Config) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type FormatResponse_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diagnostics []*Diagnostic `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	Path        string        `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Changed     bool          `protobuf:"varint,3,opt,name=changed,proto3" json:"changed,omitempty"`
	Diff        string        `protobuf:"bytes,4,opt,name=diff,proto3" json:"diff,omitempty"`
	Body        string        `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"` // Used for formatted STDIN
}

func (x *FormatResponse_Response) Reset() {
	*x = FormatResponse_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enos_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatResponse_Response) ProtoMessage() {}

func (x *FormatResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_enos_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatResponse_Response.ProtoReflect.Descriptor instead.
func (*FormatResponse_Response) Descriptor() ([]byte, []int) {
	return file_enos_proto_rawDescGZIP(), []int{38, 0}
}

func (x *FormatResponse_Response) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

func (x *FormatResponse_Response) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FormatResponse_Response) GetChanged() bool {
	if x != nil {
		return x.Changed
	}
	return false
}

func (x *FormatResponse_Response) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

func (x *FormatResponse_Response) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

var File_enos_proto protoreflect.FileDescriptor

var file_enos_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96,
	0x04, 0x0a, 0x02, 0x55, 0x49, 0x1a, 0x8f, 0x04, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x74, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3d,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x49, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3a, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x49, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x64,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a,
	0x10, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x6e,
	0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x59, 0x0a, 0x06, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x5f, 0x54, 0x45, 0x58, 0x54,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f,
	0x4e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x48, 0x54,
	0x4d, 0x4c, 0x10, 0x03, 0x22, 0x71, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a,
	0x11, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x57,
	0x41, 0x52, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x44,
	0x45, 0x42, 0x55, 0x47, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x05, 0x22, 0xb5, 0x05, 0x0a, 0x0a, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x07,
	0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x1a, 0x8a, 0x02,
	0x0a, 0x07, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x32, 0x0a, 0x14, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x4d, 0x0a, 0x0f, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x08, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x56,
	0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22,
	0xce, 0x01, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x50,
	0x6f, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x45, 0x0a, 0x03, 0x50, 0x6f, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x79, 0x74, 0x65,
	0x22, 0xc3, 0x01, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3d,
	0x0a, 0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x4c, 0x0a,
	0x0b, 0x74, 0x66, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x66, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b,
	0x74, 0x66, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x63, 0x66, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x44, 0x69, 0x72, 0x22, 0xe7, 0x02, 0x0a, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72,
	0x12, 0x46, 0x0a, 0x08, 0x65, 0x6e, 0x6f, 0x73, 0x5f, 0x68, 0x63, 0x6c, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x2e, 0x45, 0x6e, 0x6f, 0x73, 0x48, 0x63, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x65, 0x6e, 0x6f, 0x73, 0x5f, 0x68, 0x63, 0x6c, 0x12, 0x54, 0x0a, 0x0d, 0x65, 0x6e, 0x6f, 0x73,
	0x5f, 0x76, 0x61, 0x72, 0x73, 0x5f, 0x68, 0x63, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x45,
	0x6e, 0x6f, 0x73, 0x56, 0x61, 0x72, 0x73, 0x48, 0x63, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x65, 0x6e, 0x6f, 0x73, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x5f, 0x68, 0x63, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x6e, 0x6f, 0x73, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x5f, 0x65, 0x6e, 0x76, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x6f, 0x73, 0x5f, 0x76, 0x61, 0x72, 0x73,
	0x5f, 0x65, 0x6e, 0x76, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x6f, 0x73, 0x48, 0x63, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x3e, 0x0a, 0x10, 0x45, 0x6e, 0x6f, 0x73, 0x56, 0x61, 0x72, 0x73, 0x48, 0x63, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x90, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x70,
	0x6c, 0x61, 0x6e, 0x22, 0xd9, 0x06, 0x0a, 0x08, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x1a, 0xa2, 0x01, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbd, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61,
	0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61,
	0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x3b,
	0x0a, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x52, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x1a, 0x0b, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x6c, 0x6c, 0x1a, 0xe7, 0x02, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x31,
	0x0a, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x4f, 0x75,
	0x74, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70,
	0x73, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x73, 0x1a, 0x74, 0x0a, 0x04, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x73, 0x22,
	0x73, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x2b, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb5, 0x28, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0xc6, 0x05, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12, 0x3a, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x12,
	0x48, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x3c, 0x0a, 0x03, 0x72, 0x75, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x75, 0x6e,
	0x48, 0x00, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x48, 0x00, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x45, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a,
	0x0a, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x1a, 0x07, 0x0a, 0x05, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x1a, 0x08, 0x0a, 0x06, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x1a, 0x09,
	0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x1a, 0x05, 0x0a, 0x03, 0x52, 0x75, 0x6e,
	0x1a, 0x06, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x1a, 0x08, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xe4, 0x18, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x30, 0x0a, 0x02, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x06, 0x6c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x12, 0x49, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x3d,
	0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x40, 0x0a,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x48, 0x00, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12,
	0x46, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a, 0x9c, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0xf8, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x4a, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x1a, 0xc4, 0x03, 0x0a, 0x06, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x3f, 0x0a, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x4a, 0x0a,
	0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x69, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x69,
	0x74, 0x12, 0x52, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x49, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x8d, 0x03, 0x0a, 0x07, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x5c, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x4a, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x46, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x4f, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x1a, 0xf0, 0x04, 0x0a, 0x03, 0x52, 0x75, 0x6e,
	0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x4a, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72,
	0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x12, 0x49, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x10,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x68, 0x6f,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x4f, 0x0a, 0x07, 0x64, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x1a, 0xe0, 0x01, 0x0a, 0x04,
	0x45, 0x78, 0x65, 0x63, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x1a, 0xe8,
	0x01, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x4f, 0x0a, 0x10, 0x74, 0x65,
	0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x10, 0x74, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x8c, 0x08, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x30, 0x0a,
	0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x12,
	0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3b, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x08,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x69, 0x6e,
	0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x69, 0x6e, 0x69, 0x74, 0x12, 0x54, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72,
	0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x12, 0x4b, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x51, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x12, 0x48, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x4e,
	0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x48,
	0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xe8, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x41, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x22, 0x97, 0x12, 0x0a,
	0x09, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x85, 0x01, 0x0a, 0x06, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x63, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x1a, 0x86, 0x0a, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x6b,
	0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x1a, 0x63, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x1a, 0xde, 0x01, 0x0a, 0x08,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x1a, 0xd1, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x96, 0x01, 0x0a,
	0x04, 0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x8d, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x1a, 0x6c, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x1a, 0x63,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x1a, 0x6e, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x1a, 0x63,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x1a, 0xa6, 0x01, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x1a, 0x9d, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x1a, 0xa1, 0x02, 0x0a,
	0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a, 0x96, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x4d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x1a, 0x7a, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65,
	0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x1a, 0x69, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x1a, 0x61, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xf8, 0x06, 0x0a, 0x06,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xa9, 0x06, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x46, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x69,
	0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x4f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xf8, 0x02, 0x0a, 0x05,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x4c, 0x6f, 0x63, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69,
	0x73, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x22, 0x98, 0x04, 0x0a, 0x06, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x12, 0x3a, 0x0a, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x3a, 0x0a,
	0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x07, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x1a, 0x47, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x3d, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x31, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0xdc, 0x01, 0x0a, 0x07, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x58, 0x41, 0x43, 0x54,
	0x4c, 0x59, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x51, 0x55,
	0x41, 0x4c, 0x5f, 0x55, 0x4e, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53, 0x10,
	0x03, 0x22, 0xd7, 0x0a, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x3a, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x18, 0x0a, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x9f, 0x02, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74,
	0x12, 0x33, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x2e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x1a, 0x18, 0x0a,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xc7, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x2e, 0x49, 0x44, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x65, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x65,
	0x64, 0x1a, 0xf4, 0x01, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x52, 0x06, 0x73, 0x75, 0x62, 0x73,
	0x65, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12,
	0x37, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0xc7, 0x01, 0x0a, 0x0b, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x57, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x63, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x03,
	0x52, 0x65, 0x66, 0x1a, 0x3a, 0x0a, 0x08, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12,
	0x2e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x1a,
	0x58, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x08,
	0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52,
	0x08, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x1a, 0x75, 0x0a, 0x06, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x1a, 0x3d, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x73,
	0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x22, 0x9f, 0x01, 0x0a, 0x25, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x26, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd2, 0x01, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73,
	0x22, 0x92, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd9, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x40, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x90, 0x01, 0x0a,
	0x16, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0xd7, 0x01, 0x0a, 0x17, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52,
	0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06,
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd8, 0x01,
	0x0a, 0x18, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x52, 0x75, 0x6e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x52, 0x75, 0x6e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x8e, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xd5, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x3a, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a, 0x17,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x66, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x07, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x15, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39,
	0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb9, 0x02, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x2e, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x1a, 0x7a, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x22, 0xbf,
	0x02, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x48, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x1a, 0xa1, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x4f, 0x0a, 0x1b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f,
	0x70, 0x22, 0x99, 0x01, 0x0a, 0x1c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a,
	0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x02, 0x6f, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd5, 0x01,
	0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8f, 0x02, 0x0a, 0x18, 0x4f, 0x75,
	0x74, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x2e, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x07, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb2, 0x0d, 0x0a,
	0x0b, 0x45, 0x6e, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x1e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x28, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x70, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0f, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6d, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x73, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x61, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12,
	0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0f, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x29, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x20,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x14, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2e, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x58, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0d,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x27, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6d, 0x0a, 0x10, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x65, 0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x65,
	0x6e, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x65, 0x6e, 0x6f, 0x73, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enos_proto_rawDescOnce sync.Once
	file_enos_proto_rawDescData = file_enos_proto_rawDesc
)

func file_enos_proto_rawDescGZIP() []byte {
	file_enos_proto_rawDescOnce.Do(func() {
		file_enos_proto_rawDescData = protoimpl.X.CompressGZIP(file_enos_proto_rawDescData)
	})
	return file_enos_proto_rawDescData
}

var file_enos_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_enos_proto_msgTypes = make([]protoimpl.MessageInfo, 116)
var file_enos_proto_goTypes = []interface{}{
	(UI_Settings_Format)(0),    // 0: hashicorp.enos.v1.UI.Settings.Format
	(UI_Settings_Level)(0),     // 1: hashicorp.enos.v1.UI.Settings.Level
	(Diagnostic_Severity)(0),   // 2: hashicorp.enos.v1.Diagnostic.Severity
	(Operation_Status)(0),      // 3: hashicorp.enos.v1.Operation.Status
	(Matrix_Exclude_Mode)(0),   // 4: hashicorp.enos.v1.Matrix.Exclude.Mode
	(*UI)(nil),                 // 5: hashicorp.enos.v1.UI
	(*Diagnostic)(nil),         // 6: hashicorp.enos.v1.Diagnostic
	(*Range)(nil),              // 7: hashicorp.enos.v1.Range
	(*Workspace)(nil),          // 8: hashicorp.enos.v1.Workspace
	(*FlightPlan)(nil),         // 9: hashicorp.enos.v1.FlightPlan
	(*DecodeResponse)(nil),     // 10: hashicorp.enos.v1.DecodeResponse
	(*Scenario)(nil),           // 11: hashicorp.enos.v1.Scenario
	(*Operator)(nil),           // 12: hashicorp.enos.v1.Operator
	(*Operation)(nil),          // 13: hashicorp.enos.v1.Operation
	(*Terraform)(nil),          // 14: hashicorp.enos.v1.Terraform
	(*Matrix)(nil),             // 15: hashicorp.enos.v1.Matrix
	(*Sample)(nil),             // 16: hashicorp.enos.v1.Sample
	(*Ref)(nil),                // 17: hashicorp.enos.v1.Ref
	(*GetVersionRequest)(nil),  // 18: hashicorp.enos.v1.GetVersionRequest
	(*GetVersionResponse)(nil), // 19: hashicorp.enos.v1.GetVersionResponse
	(*ValidateScenariosConfigurationRequest)(nil),  // 20: hashicorp.enos.v1.ValidateScenariosConfigurationRequest
	(*ValidateScenariosConfigurationResponse)(nil), // 21: hashicorp.enos.v1.ValidateScenariosConfigurationResponse
	(*ListScenariosRequest)(nil),                   // 22: hashicorp.enos.v1.ListScenariosRequest
	(*ListScenariosResponse)(nil),                  // 23: hashicorp.enos.v1.ListScenariosResponse
	(*GenerateScenariosRequest)(nil),               // 24: hashicorp.enos.v1.GenerateScenariosRequest
	(*GenerateScenariosResponse)(nil),              // 25: hashicorp.enos.v1.GenerateScenariosResponse
	(*CheckScenariosRequest)(nil),                  // 26: hashicorp.enos.v1.CheckScenariosRequest
	(*CheckScenariosResponse)(nil),                 // 27: hashicorp.enos.v1.CheckScenariosResponse
	(*LaunchScenariosRequest)(nil),                 // 28: hashicorp.enos.v1.LaunchScenariosRequest
	(*LaunchScenariosResponse)(nil),                // 29: hashicorp.enos.v1.LaunchScenariosResponse
	(*DestroyScenariosRequest)(nil),                // 30: hashicorp.enos.v1.DestroyScenariosRequest
	(*DestroyScenariosResponse)(nil),               // 31: hashicorp.enos.v1.DestroyScenariosResponse
	(*RunScenariosRequest)(nil),                    // 32: hashicorp.enos.v1.RunScenariosRequest
	(*RunScenariosResponse)(nil),                   // 33: hashicorp.enos.v1.RunScenariosResponse
	(*ExecScenariosRequest)(nil),                   // 34: hashicorp.enos.v1.ExecScenariosRequest
	(*ExecScenariosResponse)(nil),                  // 35: hashicorp.enos.v1.ExecScenariosResponse
	(*OutputScenariosRequest)(nil),                 // 36: hashicorp.enos.v1.OutputScenariosRequest
	(*OutputScenariosResponse)(nil),                // 37: hashicorp.enos.v1.OutputScenariosResponse
	(*ListSamplesRequest)(nil),                     // 38: hashicorp.enos.v1.ListSamplesRequest
	(*ListSamplesResponse)(nil),                    // 39: hashicorp.enos.v1.ListSamplesResponse
	(*ObserveSampleRequest)(nil),                   // 40: hashicorp.enos.v1.ObserveSampleRequest
	(*ObserveSampleResponse)(nil),                  // 41: hashicorp.enos.v1.ObserveSampleResponse
	(*FormatRequest)(nil),                          // 42: hashicorp.enos.v1.FormatRequest
	(*FormatResponse)(nil),                         // 43: hashicorp.enos.v1.FormatResponse
	(*OperationEventStreamRequest)(nil),            // 44: hashicorp.enos.v1.OperationEventStreamRequest
	(*OperationEventStreamResponse)(nil),           // 45: hashicorp.enos.v1.OperationEventStreamResponse
	(*OperationRequest)(nil),                       // 46: hashicorp.enos.v1.OperationRequest
	(*OperationResponse)(nil),                      // 47: hashicorp.enos.v1.OperationResponse
	(*OperationResponses)(nil),                     // 48: hashicorp.enos.v1.OperationResponses
	(*OutlineScenariosRequest)(nil),                // 49: hashicorp.enos.v1.OutlineScenariosRequest
	(*OutlineScenariosResponse)(nil),               // 50: hashicorp.enos.v1.OutlineScenariosResponse
	(*Quality)(nil),                                // 51: hashicorp.enos.v1.Quality
	(*UI_Settings)(nil),                            // 52: hashicorp.enos.v1.UI.Settings
	(*Diagnostic_Snippet)(nil),                     // 53: hashicorp.enos.v1.Diagnostic.Snippet
	(*Diagnostic_ExpressionValue)(nil),             // 54: hashicorp.enos.v1.Diagnostic.ExpressionValue
	(*Range_Pos)(nil),                              // 55: hashicorp.enos.v1.Range.Pos
	nil,                                            // 56: hashicorp.enos.v1.FlightPlan.EnosHclEntry
	nil,                                            // 57: hashicorp.enos.v1.FlightPlan.EnosVarsHclEntry
	(*Scenario_ID)(nil),                            // 58: hashicorp.enos.v1.Scenario.ID
	(*Scenario_Filter)(nil),                        // 59: hashicorp.enos.v1.Scenario.Filter
	(*Scenario_Outline)(nil),                       // 60: hashicorp.enos.v1.Scenario.Outline
	(*Scenario_Filter_SelectAll)(nil),              // 61: hashicorp.enos.v1.Scenario.Filter.SelectAll
	(*Scenario_Outline_Step)(nil),                  // 62: hashicorp.enos.v1.Scenario.Outline.Step
	(*Operator_Config)(nil),                        // 63: hashicorp.enos.v1.Operator.Config
	(*Operation_Request)(nil),                      // 64: hashicorp.enos.v1.Operation.Request
	(*Operation_Response)(nil),                     // 65: hashicorp.enos.v1.Operation.Response
	(*Operation_Event)(nil),                        // 66: hashicorp.enos.v1.Operation.Event
	(*Operation_Request_Generate)(nil),             // 67: hashicorp.enos.v1.Operation.Request.Generate
	(*Operation_Request_Check)(nil),                // 68: hashicorp.enos.v1.Operation.Request.Check
	(*Operation_Request_Launch)(nil),               // 69: hashicorp.enos.v1.Operation.Request.Launch
	(*Operation_Request_Destroy)(nil),              // 70: hashicorp.enos.v1.Operation.Request.Destroy
	(*Operation_Request_Run)(nil),                  // 71: hashicorp.enos.v1.Operation.Request.Run
	(*Operation_Request_Exec)(nil),                 // 72: hashicorp.enos.v1.Operation.Request.Exec
	(*Operation_Request_Output)(nil),               // 73: hashicorp.enos.v1.Operation.Request.Output
	(*Operation_Response_Generate)(nil),            // 74: hashicorp.enos.v1.Operation.Response.Generate
	(*Operation_Response_Check)(nil),               // 75: hashicorp.enos.v1.Operation.Response.Check
	(*Operation_Response_Launch)(nil),              // 76: hashicorp.enos.v1.Operation.Response.Launch
	(*Operation_Response_Destroy)(nil),             // 77: hashicorp.enos.v1.Operation.Response.Destroy
	(*Operation_Response_Run)(nil),                 // 78: hashicorp.enos.v1.Operation.Response.Run
	(*Operation_Response_Exec)(nil),                // 79: hashicorp.enos.v1.Operation.Response.Exec
	(*Operation_Response_Output)(nil),              // 80: hashicorp.enos.v1.Operation.Response.Output
	(*Terraform_Module)(nil),                       // 81: hashicorp.enos.v1.Terraform.Module
	(*Terraform_Command)(nil),                      // 82: hashicorp.enos.v1.Terraform.Command
	(*Terraform_Runner)(nil),                       // 83: hashicorp.enos.v1.Terraform.Runner
	(*Terraform_Command_Init)(nil),                 // 84: hashicorp.enos.v1.Terraform.Command.Init
	(*Terraform_Command_Validate)(nil),             // 85: hashicorp.enos.v1.Terraform.Command.Validate
	(*Terraform_Command_Plan)(nil),                 // 86: hashicorp.enos.v1.Terraform.Command.Plan
	(*Terraform_Command_Apply)(nil),                // 87: hashicorp.enos.v1.Terraform.Command.Apply
	(*Terraform_Command_Destroy)(nil),              // 88: hashicorp.enos.v1.Terraform.Command.Destroy
	(*Terraform_Command_Exec)(nil),                 // 89: hashicorp.enos.v1.Terraform.Command.Exec
	(*Terraform_Command_Output)(nil),               // 90: hashicorp.enos.v1.Terraform.Command.Output
	(*Terraform_Command_Show)(nil),                 // 91: hashicorp.enos.v1.Terraform.Command.Show
	(*Terraform_Command_Init_Response)(nil),        // 92: hashicorp.enos.v1.Terraform.Command.Init.Response
	(*Terraform_Command_Validate_Response)(nil),    // 93: hashicorp.enos.v1.Terraform.Command.Validate.Response
	(*Terraform_Command_Plan_Response)(nil),        // 94: hashicorp.enos.v1.Terraform.Command.Plan.Response
	(*Terraform_Command_Apply_Response)(nil),       // 95: hashicorp.enos.v1.Terraform.Command.Apply.Response
	(*Terraform_Command_Destroy_Response)(nil),     // 96: hashicorp.enos.v1.Terraform.Command.Destroy.Response
	(*Terraform_Command_Exec_Response)(nil),        // 97: hashicorp.enos.v1.Terraform.Command.Exec.Response
	(*Terraform_Command_Output_Response)(nil),      // 98: hashicorp.enos.v1.Terraform.Command.Output.Response
	(*Terraform_Command_Output_Response_Meta)(nil), // 99: hashicorp.enos.v1.Terraform.Command.Output.Response.Meta
	(*Terraform_Command_Show_Response)(nil),        // 100: hashicorp.enos.v1.Terraform.Command.Show.Response
	(*Terraform_Runner_Config)(nil),                // 101: hashicorp.enos.v1.Terraform.Runner.Config
	nil,                                            // 102: hashicorp.enos.v1.Terraform.Runner.Config.EnvEntry
	(*Terraform_Runner_Config_Flags)(nil),          // 103: hashicorp.enos.v1.Terraform.Runner.Config.Flags
	(*Matrix_Vector)(nil),                          // 104: hashicorp.enos.v1.Matrix.Vector
	(*Matrix_Element)(nil),                         // 105: hashicorp.enos.v1.Matrix.Element
	(*Matrix_Exclude)(nil),                         // 106: hashicorp.enos.v1.Matrix.Exclude
	(*Sample_ID)(nil),                              // 107: hashicorp.enos.v1.Sample.ID
	(*Sample_Subset)(nil),                          // 108: hashicorp.enos.v1.Sample.Subset
	(*Sample_Filter)(nil),                          // 109: hashicorp.enos.v1.Sample.Filter
	(*Sample_Element)(nil),                         // 110: hashicorp.enos.v1.Sample.Element
	(*Sample_Observation)(nil),                     // 111: hashicorp.enos.v1.Sample.Observation
	(*Sample_Attribute)(nil),                       // 112: hashicorp.enos.v1.Sample.Attribute
	(*Sample_Subset_ID)(nil),                       // 113: hashicorp.enos.v1.Sample.Subset.ID
	(*Ref_Scenario)(nil),                           // 114: hashicorp.enos.v1.Ref.Scenario
	(*Ref_Operation)(nil),                          // 115: hashicorp.enos.v1.Ref.Operation
	(*Ref_Sample)(nil),                             // 116: hashicorp.enos.v1.Ref.Sample
	(*Ref_Sample_Subset)(nil),                      // 117: hashicorp.enos.v1.Ref.Sample.Subset
	(*FormatRequest_File)(nil),                     // 118: hashicorp.enos.v1.FormatRequest.File
	(*FormatRequest_Config)(nil),                   // 119: hashicorp.enos.v1.FormatRequest.Config
	(*FormatResponse_Response)(nil),                // 120: hashicorp.enos.v1.FormatResponse.Response
	(*timestamppb.Timestamp)(nil),                  // 121: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                    // 122: google.protobuf.Duration
	(*structpb.Struct)(nil),                        // 123: google.protobuf.Struct
}
var file_enos_proto_depIdxs = []int32{
	2,   // 0: hashicorp.enos.v1.Diagnostic.severity:type_name -> hashicorp.enos.v1.Diagnostic.Severity
	7,   // 1: hashicorp.enos.v1.Diagnostic.range:type_name -> hashicorp.enos.v1.Range
	53,  // 2: hashicorp.enos.v1.Diagnostic.snippet:type_name -> hashicorp.enos.v1.Diagnostic.Snippet
	55,  // 3: hashicorp.enos.v1.Range.start:type_name -> hashicorp.enos.v1.Range.Pos
	55,  // 4: hashicorp.enos.v1.Range.end:type_name -> hashicorp.enos.v1.Range.Pos
	9,   // 5: hashicorp.enos.v1.Workspace.flightplan:type_name -> hashicorp.enos.v1.FlightPlan
	101, // 6: hashicorp.enos.v1.Workspace.tf_exec_cfg:type_name -> hashicorp.enos.v1.Terraform.Runner.Config
	56,  // 7: hashicorp.enos.v1.FlightPlan.enos_hcl:type_name -> hashicorp.enos.v1.FlightPlan.EnosHclEntry
	57,  // 8: hashicorp.enos.v1.FlightPlan.enos_vars_hcl:type_name -> hashicorp.enos.v1.FlightPlan.EnosVarsHclEntry
	6,   // 9: hashicorp.enos.v1.DecodeResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	9,   // 10: hashicorp.enos.v1.DecodeResponse.flightplan:type_name -> hashicorp.enos.v1.FlightPlan
	63,  // 11: hashicorp.enos.v1.Operator.config:type_name -> hashicorp.enos.v1.Operator.Config
	104, // 12: hashicorp.enos.v1.Matrix.vectors:type_name -> hashicorp.enos.v1.Matrix.Vector
	104, // 13: hashicorp.enos.v1.Matrix.include:type_name -> hashicorp.enos.v1.Matrix.Vector
	106, // 14: hashicorp.enos.v1.Matrix.exclude:type_name -> hashicorp.enos.v1.Matrix.Exclude
	107, // 15: hashicorp.enos.v1.Sample.id:type_name -> hashicorp.enos.v1.Sample.ID
	112, // 16: hashicorp.enos.v1.Sample.attributes:type_name -> hashicorp.enos.v1.Sample.Attribute
	108, // 17: hashicorp.enos.v1.Sample.subsets:type_name -> hashicorp.enos.v1.Sample.Subset
	6,   // 18: hashicorp.enos.v1.GetVersionResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	8,   // 19: hashicorp.enos.v1.ValidateScenariosConfigurationRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 20: hashicorp.enos.v1.ValidateScenariosConfigurationRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 21: hashicorp.enos.v1.ValidateScenariosConfigurationResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 22: hashicorp.enos.v1.ValidateScenariosConfigurationResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	8,   // 23: hashicorp.enos.v1.ListScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 24: hashicorp.enos.v1.ListScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 25: hashicorp.enos.v1.ListScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 26: hashicorp.enos.v1.ListScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	114, // 27: hashicorp.enos.v1.ListScenariosResponse.scenarios:type_name -> hashicorp.enos.v1.Ref.Scenario
	8,   // 28: hashicorp.enos.v1.GenerateScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 29: hashicorp.enos.v1.GenerateScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 30: hashicorp.enos.v1.GenerateScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 31: hashicorp.enos.v1.GenerateScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 32: hashicorp.enos.v1.GenerateScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 33: hashicorp.enos.v1.CheckScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 34: hashicorp.enos.v1.CheckScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 35: hashicorp.enos.v1.CheckScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 36: hashicorp.enos.v1.CheckScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 37: hashicorp.enos.v1.CheckScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 38: hashicorp.enos.v1.LaunchScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 39: hashicorp.enos.v1.LaunchScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 40: hashicorp.enos.v1.LaunchScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 41: hashicorp.enos.v1.LaunchScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 42: hashicorp.enos.v1.LaunchScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 43: hashicorp.enos.v1.DestroyScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 44: hashicorp.enos.v1.DestroyScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 45: hashicorp.enos.v1.DestroyScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 46: hashicorp.enos.v1.DestroyScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 47: hashicorp.enos.v1.DestroyScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 48: hashicorp.enos.v1.RunScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 49: hashicorp.enos.v1.RunScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 50: hashicorp.enos.v1.RunScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 51: hashicorp.enos.v1.RunScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 52: hashicorp.enos.v1.RunScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 53: hashicorp.enos.v1.ExecScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 54: hashicorp.enos.v1.ExecScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 55: hashicorp.enos.v1.ExecScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 56: hashicorp.enos.v1.ExecScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 57: hashicorp.enos.v1.ExecScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 58: hashicorp.enos.v1.OutputScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 59: hashicorp.enos.v1.OutputScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 60: hashicorp.enos.v1.OutputScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 61: hashicorp.enos.v1.OutputScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	115, // 62: hashicorp.enos.v1.OutputScenariosResponse.operations:type_name -> hashicorp.enos.v1.Ref.Operation
	8,   // 63: hashicorp.enos.v1.ListSamplesRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	6,   // 64: hashicorp.enos.v1.ListSamplesResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 65: hashicorp.enos.v1.ListSamplesResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	116, // 66: hashicorp.enos.v1.ListSamplesResponse.samples:type_name -> hashicorp.enos.v1.Ref.Sample
	8,   // 67: hashicorp.enos.v1.ObserveSampleRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	109, // 68: hashicorp.enos.v1.ObserveSampleRequest.filter:type_name -> hashicorp.enos.v1.Sample.Filter
	6,   // 69: hashicorp.enos.v1.ObserveSampleResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 70: hashicorp.enos.v1.ObserveSampleResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	111, // 71: hashicorp.enos.v1.ObserveSampleResponse.observation:type_name -> hashicorp.enos.v1.Sample.Observation
	118, // 72: hashicorp.enos.v1.FormatRequest.files:type_name -> hashicorp.enos.v1.FormatRequest.File
	119, // 73: hashicorp.enos.v1.FormatRequest.config:type_name -> hashicorp.enos.v1.FormatRequest.Config
	6,   // 74: hashicorp.enos.v1.FormatResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	120, // 75: hashicorp.enos.v1.FormatResponse.responses:type_name -> hashicorp.enos.v1.FormatResponse.Response
	115, // 76: hashicorp.enos.v1.OperationEventStreamRequest.op:type_name -> hashicorp.enos.v1.Ref.Operation
	6,   // 77: hashicorp.enos.v1.OperationEventStreamResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	66,  // 78: hashicorp.enos.v1.OperationEventStreamResponse.event:type_name -> hashicorp.enos.v1.Operation.Event
	115, // 79: hashicorp.enos.v1.OperationRequest.op:type_name -> hashicorp.enos.v1.Ref.Operation
	6,   // 80: hashicorp.enos.v1.OperationResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	65,  // 81: hashicorp.enos.v1.OperationResponse.response:type_name -> hashicorp.enos.v1.Operation.Response
	6,   // 82: hashicorp.enos.v1.OperationResponses.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 83: hashicorp.enos.v1.OperationResponses.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	65,  // 84: hashicorp.enos.v1.OperationResponses.responses:type_name -> hashicorp.enos.v1.Operation.Response
	8,   // 85: hashicorp.enos.v1.OutlineScenariosRequest.workspace:type_name -> hashicorp.enos.v1.Workspace
	59,  // 86: hashicorp.enos.v1.OutlineScenariosRequest.filter:type_name -> hashicorp.enos.v1.Scenario.Filter
	6,   // 87: hashicorp.enos.v1.OutlineScenariosResponse.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	10,  // 88: hashicorp.enos.v1.OutlineScenariosResponse.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	60,  // 89: hashicorp.enos.v1.OutlineScenariosResponse.outlines:type_name -> hashicorp.enos.v1.Scenario.Outline
	51,  // 90: hashicorp.enos.v1.OutlineScenariosResponse.verifies:type_name -> hashicorp.enos.v1.Quality
	0,   // 91: hashicorp.enos.v1.UI.Settings.format:type_name -> hashicorp.enos.v1.UI.Settings.Format
	1,   // 92: hashicorp.enos.v1.UI.Settings.level:type_name -> hashicorp.enos.v1.UI.Settings.Level
	54,  // 93: hashicorp.enos.v1.Diagnostic.Snippet.values:type_name -> hashicorp.enos.v1.Diagnostic.ExpressionValue
	104, // 94: hashicorp.enos.v1.Scenario.ID.variants:type_name -> hashicorp.enos.v1.Matrix.Vector
	61,  // 95: hashicorp.enos.v1.Scenario.Filter.select_all:type_name -> hashicorp.enos.v1.Scenario.Filter.SelectAll
	104, // 96: hashicorp.enos.v1.Scenario.Filter.include:type_name -> hashicorp.enos.v1.Matrix.Vector
	106, // 97: hashicorp.enos.v1.Scenario.Filter.exclude:type_name -> hashicorp.enos.v1.Matrix.Exclude
	15,  // 98: hashicorp.enos.v1.Scenario.Filter.intersection_matrix:type_name -> hashicorp.enos.v1.Matrix
	114, // 99: hashicorp.enos.v1.Scenario.Outline.scenario:type_name -> hashicorp.enos.v1.Ref.Scenario
	15,  // 100: hashicorp.enos.v1.Scenario.Outline.matrix:type_name -> hashicorp.enos.v1.Matrix
	62,  // 101: hashicorp.enos.v1.Scenario.Outline.steps:type_name -> hashicorp.enos.v1.Scenario.Outline.Step
	51,  // 102: hashicorp.enos.v1.Scenario.Outline.verifies:type_name -> hashicorp.enos.v1.Quality
	51,  // 103: hashicorp.enos.v1.Scenario.Outline.Step.verifies:type_name -> hashicorp.enos.v1.Quality
	114, // 104: hashicorp.enos.v1.Operation.Request.scenario:type_name -> hashicorp.enos.v1.Ref.Scenario
	8,   // 105: hashicorp.enos.v1.Operation.Request.workspace:type_name -> hashicorp.enos.v1.Workspace
	67,  // 106: hashicorp.enos.v1.Operation.Request.generate:type_name -> hashicorp.enos.v1.Operation.Request.Generate
	68,  // 107: hashicorp.enos.v1.Operation.Request.check:type_name -> hashicorp.enos.v1.Operation.Request.Check
	69,  // 108: hashicorp.enos.v1.Operation.Request.launch:type_name -> hashicorp.enos.v1.Operation.Request.Launch
	70,  // 109: hashicorp.enos.v1.Operation.Request.destroy:type_name -> hashicorp.enos.v1.Operation.Request.Destroy
	71,  // 110: hashicorp.enos.v1.Operation.Request.run:type_name -> hashicorp.enos.v1.Operation.Request.Run
	72,  // 111: hashicorp.enos.v1.Operation.Request.exec:type_name -> hashicorp.enos.v1.Operation.Request.Exec
	73,  // 112: hashicorp.enos.v1.Operation.Request.output:type_name -> hashicorp.enos.v1.Operation.Request.Output
	6,   // 113: hashicorp.enos.v1.Operation.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	115, // 114: hashicorp.enos.v1.Operation.Response.op:type_name -> hashicorp.enos.v1.Ref.Operation
	3,   // 115: hashicorp.enos.v1.Operation.Response.status:type_name -> hashicorp.enos.v1.Operation.Status
	74,  // 116: hashicorp.enos.v1.Operation.Response.generate:type_name -> hashicorp.enos.v1.Operation.Response.Generate
	75,  // 117: hashicorp.enos.v1.Operation.Response.check:type_name -> hashicorp.enos.v1.Operation.Response.Check
	76,  // 118: hashicorp.enos.v1.Operation.Response.launch:type_name -> hashicorp.enos.v1.Operation.Response.Launch
	77,  // 119: hashicorp.enos.v1.Operation.Response.destroy:type_name -> hashicorp.enos.v1.Operation.Response.Destroy
	78,  // 120: hashicorp.enos.v1.Operation.Response.run:type_name -> hashicorp.enos.v1.Operation.Response.Run
	79,  // 121: hashicorp.enos.v1.Operation.Response.exec:type_name -> hashicorp.enos.v1.Operation.Response.Exec
	80,  // 122: hashicorp.enos.v1.Operation.Response.output:type_name -> hashicorp.enos.v1.Operation.Response.Output
	6,   // 123: hashicorp.enos.v1.Operation.Event.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	115, // 124: hashicorp.enos.v1.Operation.Event.op:type_name -> hashicorp.enos.v1.Ref.Operation
	3,   // 125: hashicorp.enos.v1.Operation.Event.status:type_name -> hashicorp.enos.v1.Operation.Status
	121, // 126: hashicorp.enos.v1.Operation.Event.published_at:type_name -> google.protobuf.Timestamp
	10,  // 127: hashicorp.enos.v1.Operation.Event.decode:type_name -> hashicorp.enos.v1.DecodeResponse
	74,  // 128: hashicorp.enos.v1.Operation.Event.generate:type_name -> hashicorp.enos.v1.Operation.Response.Generate
	92,  // 129: hashicorp.enos.v1.Operation.Event.init:type_name -> hashicorp.enos.v1.Terraform.Command.Init.Response
	93,  // 130: hashicorp.enos.v1.Operation.Event.validate:type_name -> hashicorp.enos.v1.Terraform.Command.Validate.Response
	94,  // 131: hashicorp.enos.v1.Operation.Event.plan:type_name -> hashicorp.enos.v1.Terraform.Command.Plan.Response
	95,  // 132: hashicorp.enos.v1.Operation.Event.apply:type_name -> hashicorp.enos.v1.Terraform.Command.Apply.Response
	96,  // 133: hashicorp.enos.v1.Operation.Event.destroy:type_name -> hashicorp.enos.v1.Terraform.Command.Destroy.Response
	97,  // 134: hashicorp.enos.v1.Operation.Event.exec:type_name -> hashicorp.enos.v1.Terraform.Command.Exec.Response
	98,  // 135: hashicorp.enos.v1.Operation.Event.output:type_name -> hashicorp.enos.v1.Terraform.Command.Output.Response
	100, // 136: hashicorp.enos.v1.Operation.Event.show:type_name -> hashicorp.enos.v1.Terraform.Command.Show.Response
	6,   // 137: hashicorp.enos.v1.Operation.Response.Generate.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	81,  // 138: hashicorp.enos.v1.Operation.Response.Generate.terraform_module:type_name -> hashicorp.enos.v1.Terraform.Module
	6,   // 139: hashicorp.enos.v1.Operation.Response.Check.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	74,  // 140: hashicorp.enos.v1.Operation.Response.Check.generate:type_name -> hashicorp.enos.v1.Operation.Response.Generate
	92,  // 141: hashicorp.enos.v1.Operation.Response.Check.init:type_name -> hashicorp.enos.v1.Terraform.Command.Init.Response
	93,  // 142: hashicorp.enos.v1.Operation.Response.Check.validate:type_name -> hashicorp.enos.v1.Terraform.Command.Validate.Response
	94,  // 143: hashicorp.enos.v1.Operation.Response.Check.plan:type_name -> hashicorp.enos.v1.Terraform.Command.Plan.Response
	6,   // 144: hashicorp.enos.v1.Operation.Response.Launch.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	74,  // 145: hashicorp.enos.v1.Operation.Response.Launch.generate:type_name -> hashicorp.enos.v1.Operation.Response.Generate
	92,  // 146: hashicorp.enos.v1.Operation.Response.Launch.init:type_name -> hashicorp.enos.v1.Terraform.Command.Init.Response
	93,  // 147: hashicorp.enos.v1.Operation.Response.Launch.validate:type_name -> hashicorp.enos.v1.Terraform.Command.Validate.Response
	94,  // 148: hashicorp.enos.v1.Operation.Response.Launch.plan:type_name -> hashicorp.enos.v1.Terraform.Command.Plan.Response
	95,  // 149: hashicorp.enos.v1.Operation.Response.Launch.apply:type_name -> hashicorp.enos.v1.Terraform.Command.Apply.Response
	6,   // 150: hashicorp.enos.v1.Operation.Response.Destroy.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	100, // 151: hashicorp.enos.v1.Operation.Response.Destroy.prior_state_show:type_name -> hashicorp.enos.v1.Terraform.Command.Show.Response
	74,  // 152: hashicorp.enos.v1.Operation.Response.Destroy.generate:type_name -> hashicorp.enos.v1.Operation.Response.Generate
	92,  // 153: hashicorp.enos.v1.Operation.Response.Destroy.init:type_name -> hashicorp.enos.v1.Terraform.Command.Init.Response
	96,  // 154: hashicorp.enos.v1.Operation.Response.Destroy.destroy:type_name -> hashicorp.enos.v1.Terraform.Command.Destroy.Response
	6,   // 155: hashicorp.enos.v1.Operation.Response.Run.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	74,  // 156: hashicorp.enos.v1.Operation.Response.Run.generate:type_name -> hashicorp.enos.v1.Operation.Response.Generate
	92,  // 157: hashicorp.enos.v1.Operation.Response.Run.init:type_name -> hashicorp.enos.v1.Terraform.Command.Init.Response
	93,  // 158: hashicorp.enos.v1.Operation.Response.Run.validate:type_name -> hashicorp.enos.v1.Terraform.Command.Validate.Response
	94,  // 159: hashicorp.enos.v1.Operation.Response.Run.plan:type_name -> hashicorp.enos.v1.Terraform.Command.Plan.Response
	95,  // 160: hashicorp.enos.v1.Operation.Response.Run.apply:type_name -> hashicorp.enos.v1.Terraform.Command.Apply.Response
	100, // 161: hashicorp.enos.v1.Operation.Response.Run.prior_state_show:type_name -> hashicorp.enos.v1.Terraform.Command.Show.Response
	96,  // 162: hashicorp.enos.v1.Operation.Response.Run.destroy:type_name -> hashicorp.enos.v1.Terraform.Command.Destroy.Response
	6,   // 163: hashicorp.enos.v1.Operation.Response.Exec.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	81,  // 164: hashicorp.enos.v1.Operation.Response.Exec.terraform_module:type_name -> hashicorp.enos.v1.Terraform.Module
	97,  // 165: hashicorp.enos.v1.Operation.Response.Exec.exec:type_name -> hashicorp.enos.v1.Terraform.Command.Exec.Response
	6,   // 166: hashicorp.enos.v1.Operation.Response.Output.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	81,  // 167: hashicorp.enos.v1.Operation.Response.Output.terraform_module:type_name -> hashicorp.enos.v1.Terraform.Module
	98,  // 168: hashicorp.enos.v1.Operation.Response.Output.output:type_name -> hashicorp.enos.v1.Terraform.Command.Output.Response
	114, // 169: hashicorp.enos.v1.Terraform.Module.scenario_ref:type_name -> hashicorp.enos.v1.Ref.Scenario
	101, // 170: hashicorp.enos.v1.Terraform.Runner.config:type_name -> hashicorp.enos.v1.Terraform.Runner.Config
	6,   // 171: hashicorp.enos.v1.Terraform.Command.Init.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	6,   // 172: hashicorp.enos.v1.Terraform.Command.Validate.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	6,   // 173: hashicorp.enos.v1.Terraform.Command.Plan.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	6,   // 174: hashicorp.enos.v1.Terraform.Command.Apply.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	6,   // 175: hashicorp.enos.v1.Terraform.Command.Destroy.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	6,   // 176: hashicorp.enos.v1.Terraform.Command.Exec.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	6,   // 177: hashicorp.enos.v1.Terraform.Command.Output.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	99,  // 178: hashicorp.enos.v1.Terraform.Command.Output.Response.meta:type_name -> hashicorp.enos.v1.Terraform.Command.Output.Response.Meta
	6,   // 179: hashicorp.enos.v1.Terraform.Command.Show.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	103, // 180: hashicorp.enos.v1.Terraform.Runner.Config.flags:type_name -> hashicorp.enos.v1.Terraform.Runner.Config.Flags
	102, // 181: hashicorp.enos.v1.Terraform.Runner.Config.env:type_name -> hashicorp.enos.v1.Terraform.Runner.Config.EnvEntry
	122, // 182: hashicorp.enos.v1.Terraform.Runner.Config.Flags.lock_timeout:type_name -> google.protobuf.Duration
	105, // 183: hashicorp.enos.v1.Matrix.Vector.elements:type_name -> hashicorp.enos.v1.Matrix.Element
	104, // 184: hashicorp.enos.v1.Matrix.Exclude.vector:type_name -> hashicorp.enos.v1.Matrix.Vector
	4,   // 185: hashicorp.enos.v1.Matrix.Exclude.mode:type_name -> hashicorp.enos.v1.Matrix.Exclude.Mode
	113, // 186: hashicorp.enos.v1.Sample.Subset.id:type_name -> hashicorp.enos.v1.Sample.Subset.ID
	112, // 187: hashicorp.enos.v1.Sample.Subset.attributes:type_name -> hashicorp.enos.v1.Sample.Attribute
	15,  // 188: hashicorp.enos.v1.Sample.Subset.matrix:type_name -> hashicorp.enos.v1.Matrix
	116, // 189: hashicorp.enos.v1.Sample.Filter.sample:type_name -> hashicorp.enos.v1.Ref.Sample
	113, // 190: hashicorp.enos.v1.Sample.Filter.subsets:type_name -> hashicorp.enos.v1.Sample.Subset.ID
	113, // 191: hashicorp.enos.v1.Sample.Filter.exclude_subsets:type_name -> hashicorp.enos.v1.Sample.Subset.ID
	116, // 192: hashicorp.enos.v1.Sample.Element.sample:type_name -> hashicorp.enos.v1.Ref.Sample
	117, // 193: hashicorp.enos.v1.Sample.Element.subset:type_name -> hashicorp.enos.v1.Ref.Sample.Subset
	114, // 194: hashicorp.enos.v1.Sample.Element.scenario:type_name -> hashicorp.enos.v1.Ref.Scenario
	123, // 195: hashicorp.enos.v1.Sample.Element.attributes:type_name -> google.protobuf.Struct
	6,   // 196: hashicorp.enos.v1.Sample.Observation.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	110, // 197: hashicorp.enos.v1.Sample.Observation.elements:type_name -> hashicorp.enos.v1.Sample.Element
	109, // 198: hashicorp.enos.v1.Sample.Observation.filter:type_name -> hashicorp.enos.v1.Sample.Filter
	58,  // 199: hashicorp.enos.v1.Ref.Scenario.id:type_name -> hashicorp.enos.v1.Scenario.ID
	114, // 200: hashicorp.enos.v1.Ref.Operation.scenario:type_name -> hashicorp.enos.v1.Ref.Scenario
	107, // 201: hashicorp.enos.v1.Ref.Sample.id:type_name -> hashicorp.enos.v1.Sample.ID
	113, // 202: hashicorp.enos.v1.Ref.Sample.Subset.id:type_name -> hashicorp.enos.v1.Sample.Subset.ID
	6,   // 203: hashicorp.enos.v1.FormatResponse.Response.diagnostics:type_name -> hashicorp.enos.v1.Diagnostic
	18,  // 204: hashicorp.enos.v1.EnosService.GetVersion:input_type -> hashicorp.enos.v1.GetVersionRequest
	20,  // 205: hashicorp.enos.v1.EnosService.ValidateScenariosConfiguration:input_type -> hashicorp.enos.v1.ValidateScenariosConfigurationRequest
	22,  // 206: hashicorp.enos.v1.EnosService.ListScenarios:input_type -> hashicorp.enos.v1.ListScenariosRequest
	26,  // 207: hashicorp.enos.v1.EnosService.CheckScenarios:input_type -> hashicorp.enos.v1.CheckScenariosRequest
	24,  // 208: hashicorp.enos.v1.EnosService.GenerateScenarios:input_type -> hashicorp.enos.v1.GenerateScenariosRequest
	28,  // 209: hashicorp.enos.v1.EnosService.LaunchScenarios:input_type -> hashicorp.enos.v1.LaunchScenariosRequest
	30,  // 210: hashicorp.enos.v1.EnosService.DestroyScenarios:input_type -> hashicorp.enos.v1.DestroyScenariosRequest
	32,  // 211: hashicorp.enos.v1.EnosService.RunScenarios:input_type -> hashicorp.enos.v1.RunScenariosRequest
	34,  // 212: hashicorp.enos.v1.EnosService.ExecScenarios:input_type -> hashicorp.enos.v1.ExecScenariosRequest
	36,  // 213: hashicorp.enos.v1.EnosService.OutputScenarios:input_type -> hashicorp.enos.v1.OutputScenariosRequest
	42,  // 214: hashicorp.enos.v1.EnosService.Format:input_type -> hashicorp.enos.v1.FormatRequest
	44,  // 215: hashicorp.enos.v1.EnosService.OperationEventStream:input_type -> hashicorp.enos.v1.OperationEventStreamRequest
	46,  // 216: hashicorp.enos.v1.EnosService.Operation:input_type -> hashicorp.enos.v1.OperationRequest
	38,  // 217: hashicorp.enos.v1.EnosService.ListSamples:input_type -> hashicorp.enos.v1.ListSamplesRequest
	40,  // 218: hashicorp.enos.v1.EnosService.ObserveSample:input_type -> hashicorp.enos.v1.ObserveSampleRequest
	49,  // 219: hashicorp.enos.v1.EnosService.OutlineScenarios:input_type -> hashicorp.enos.v1.OutlineScenariosRequest
	19,  // 220: hashicorp.enos.v1.EnosService.GetVersion:output_type -> hashicorp.enos.v1.GetVersionResponse
	21,  // 221: hashicorp.enos.v1.EnosService.ValidateScenariosConfiguration:output_type -> hashicorp.enos.v1.ValidateScenariosConfigurationResponse
	23,  // 222: hashicorp.enos.v1.EnosService.ListScenarios:output_type -> hashicorp.enos.v1.ListScenariosResponse
	27,  // 223: hashicorp.enos.v1.EnosService.CheckScenarios:output_type -> hashicorp.enos.v1.CheckScenariosResponse
	25,  // 224: hashicorp.enos.v1.EnosService.GenerateScenarios:output_type -> hashicorp.enos.v1.GenerateScenariosResponse
	29,  // 225: hashicorp.enos.v1.EnosService.LaunchScenarios:output_type -> hashicorp.enos.v1.LaunchScenariosResponse
	31,  // 226: hashicorp.enos.v1.EnosService.DestroyScenarios:output_type -> hashicorp.enos.v1.DestroyScenariosResponse
	33,  // 227: hashicorp.enos.v1.EnosService.RunScenarios:output_type -> hashicorp.enos.v1.RunScenariosResponse
	35,  // 228: hashicorp.enos.v1.EnosService.ExecScenarios:output_type -> hashicorp.enos.v1.ExecScenariosResponse
	37,  // 229: hashicorp.enos.v1.EnosService.OutputScenarios:output_type -> hashicorp.enos.v1.OutputScenariosResponse
	43,  // 230: hashicorp.enos.v1.EnosService.Format:output_type -> hashicorp.enos.v1.FormatResponse
	45,  // 231: hashicorp.enos.v1.EnosService.OperationEventStream:output_type -> hashicorp.enos.v1.OperationEventStreamResponse
	47,  // 232: hashicorp.enos.v1.EnosService.Operation:output_type -> hashicorp.enos.v1.OperationResponse
	39,  // 233: hashicorp.enos.v1.EnosService.ListSamples:output_type -> hashicorp.enos.v1.ListSamplesResponse
	41,  // 234: hashicorp.enos.v1.EnosService.ObserveSample:output_type -> hashicorp.enos.v1.ObserveSampleResponse
	50,  // 235: hashicorp.enos.v1.EnosService.OutlineScenarios:output_type -> hashicorp.enos.v1.OutlineScenariosResponse
	220, // [220:236] is the sub-list for method output_type
	204, // [204:220] is the sub-list for method input_type
	204, // [204:204] is the sub-list for extension type_name
	204, // [204:204] is the sub-list for extension extendee
	0,   // [0:204] is the sub-list for field type_name
}

func init() { file_enos_proto_init() }
func file_enos_proto_init() {
	if File_enos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateScenariosConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateScenariosConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSamplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSamplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserveSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserveSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationEventStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationEventStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutlineScenariosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutlineScenariosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UI_Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic_Snippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diagnostic_ExpressionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range_Pos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario_Outline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario_Filter_SelectAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scenario_Outline_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Generate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Launch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Destroy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Exec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Request_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Generate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Check); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Launch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Destroy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Exec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation_Response_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Runner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Init); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Validate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Apply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Destroy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Exec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Show); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Init_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Validate_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Plan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Apply_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Destroy_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Exec_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Output_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Output_Response_Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Command_Show_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Runner_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Terraform_Runner_Config_Flags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matrix_Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matrix_Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matrix_Exclude); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_Subset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_Observation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample_Subset_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Scenario); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Sample_Subset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatRequest_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatRequest_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enos_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatResponse_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_enos_proto_msgTypes[59].OneofWrappers = []interface{}{
		(*Operation_Request_Generate_)(nil),
		(*Operation_Request_Check_)(nil),
		(*Operation_Request_Launch_)(nil),
		(*Operation_Request_Destroy_)(nil),
		(*Operation_Request_Run_)(nil),
		(*Operation_Request_Exec_)(nil),
		(*Operation_Request_Output_)(nil),
	}
	file_enos_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*Operation_Response_Generate_)(nil),
		(*Operation_Response_Check_)(nil),
		(*Operation_Response_Launch_)(nil),
		(*Operation_Response_Destroy_)(nil),
		(*Operation_Response_Run_)(nil),
		(*Operation_Response_Exec_)(nil),
		(*Operation_Response_Output_)(nil),
	}
	file_enos_proto_msgTypes[61].OneofWrappers = []interface{}{
		(*Operation_Event_Decode)(nil),
		(*Operation_Event_Generate)(nil),
		(*Operation_Event_Init)(nil),
		(*Operation_Event_Validate)(nil),
		(*Operation_Event_Plan)(nil),
		(*Operation_Event_Apply)(nil),
		(*Operation_Event_Destroy)(nil),
		(*Operation_Event_Exec)(nil),
		(*Operation_Event_Output)(nil),
		(*Operation_Event_Show)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enos_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   116,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_enos_proto_goTypes,
		DependencyIndexes: file_enos_proto_depIdxs,
		EnumInfos:         file_enos_proto_enumTypes,
		MessageInfos:      file_enos_proto_msgTypes,
	}.Build()
	File_enos_proto = out.File
	file_enos_proto_rawDesc = nil
	file_enos_proto_goTypes = nil
	file_enos_proto_depIdxs = nil
}
